import { DNode } from '@dojo/widget-core/interfaces';
import { ThemedMixin, ThemedProperties } from '@dojo/widget-core/mixins/Themed';
import { WidgetBase } from '@dojo/widget-core/WidgetBase';
/**
 * Direction of this SplitPane
 */
export declare const enum Direction {
    column = 0,
    row = 1,
}
/**
 * @type SplitPaneProperties
 *
 * Properties that can be set on a SplitPane component
 *
 * @property direction      Orientation of this SplitPane, can be `row` or `column`
 * @property leading        Content to show in the primary pane
 * @property onResize       Called when the divider is dragged; should be used to update `size`
 * @property size           Size of the primary pane
 * @property trailing       Content to show in the secondary pane
 */
export interface SplitPaneProperties extends ThemedProperties {
    direction?: Direction;
    leading?: DNode;
    onResize?(size: number): void;
    size?: number;
    trailing?: DNode;
}
export declare const SplitPaneBase: (new (...args: any[]) => ThemedMixin<{}>) & typeof WidgetBase;
export default class SplitPane extends SplitPaneBase<SplitPaneProperties> {
    private _divider;
    private _dragging;
    private _lastSize?;
    private _position;
    private _root;
    private _boundHandlers;
    constructor();
    protected onDetach(): void;
    private _deselect();
    private _getPosition(event);
    private _onDragStart(event);
    private _onDragMove(event);
    private _onDragEnd(event);
    protected getPaneContent(content: DNode): DNode[];
    protected getPaneStyles(): {
        [key: string]: string;
    };
    protected onElementCreated(element: HTMLElement, key: string): void;
    render(): DNode;
}
