{"version":3,"file":"Label.js","sourceRoot":"","sources":["Label.ts"],"names":[],"mappings":";;;;;;;;;;;;IAAA,2DAA0D;IAE1D,0DAAuF;IACvF,yCAAwC;IACxC,wCAAyC;IACzC,0CAA4C;IAC5C,qDAAuD;IAWvD;;OAEG;IACH,IAAM,aAAa,GAAG;QACrB,OAAO,EAAE,EAAE;QACX,MAAM,EAAE,IAAI;QACZ,MAAM,EAAE,KAAK;KACb,CAAC;IAeF;;;;OAIG;IACH,2BAAkC,OAAkD;QACnF,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,GAAG,IAAK,OAAA,GAAG,EAAH,CAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC;IACxF,CAAC;IAFD,8CAEC;IAEY,QAAA,SAAS,GAAG,oBAAW,CAAC,uBAAU,CAAC,CAAC;IAGjD;QAAmC,iCAA0B;QAA7D;;QAkCA,CAAC;QAhCA,sBAAM,GAAN;YACO,IAAA,oBAGa,EAFlB,gBAAK,EACL,gBAAK,CACc;YAEpB,yDAAyD;YACzD,IAAI,UAAwB,CAAC;YAC7B,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC/B,UAAU,GAAG,aAAM,CAAC,EAAE,EAAE,aAAa,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;YAC5D,CAAC;YACD,IAAI,CAAC,CAAC;gBACL,UAAU,GAAG,aAAM,CAAC,EAAE,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;YAC/C,CAAC;YAED,kCAAkC;YAClC,IAAM,SAAS,GAAG,KAAC,CAAC,MAAM,EAAE;gBAC3B,SAAS,EAAE,UAAU,CAAC,OAAO;gBAC7B,OAAO,EAAE,CAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAE;aACzF,CAAC,CAAC;YACH,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAClC,CAAC;YACD,IAAI,CAAC,CAAC;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/B,CAAC;YAED,MAAM,CAAC,KAAC,CAAC,OAAO,EAAE;gBACjB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC;gBAC7B,GAAG,EAAE,KAAK;aACV,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnB,CAAC;QAjCmB,KAAK;YADzB,cAAK,CAAC,GAAG,CAAC;WACU,KAAK,CAkCzB;QAAD,YAAC;KAAA,AAlCD,CAAmC,iBAAS,GAkC3C;sBAlCoB,KAAK","sourcesContent":["import { WidgetBase } from '@dojo/widget-core/WidgetBase';\nimport { DNode, SupportedClassName } from '@dojo/widget-core/interfaces';\nimport { ThemedMixin, ThemedProperties, theme } from '@dojo/widget-core/mixins/Themed';\nimport { v } from '@dojo/widget-core/d';\nimport { assign } from '@dojo/core/lang';\nimport * as css from './styles/label.m.css';\nimport * as baseCss from '../common/styles/base.m.css';\n\n/**\n * Label settings for form label text content, position (before or after), and visibility\n */\nexport interface LabelOptions {\n\tcontent: string;\n\tbefore?: boolean;\n\thidden?: boolean;\n}\n\n/**\n * Default settings for form labels\n */\nconst labelDefaults = {\n\tcontent: '',\n\tbefore: true,\n\thidden: false\n};\n\n/**\n * @type LabelProperties\n *\n * Properties that can be set on a Label component\n *\n * @property forId     ID to explicitly associate the label with an input element\n * @property label      Label settings for form label text, position, and visibility\n */\nexport interface LabelProperties extends ThemedProperties {\n\tforId?: string;\n\tlabel: string | LabelOptions;\n}\n\n/**\n * This is a helper function for using `extraClasses` with Label.\n * It can be used as follows:\n * extraClasses: { root: parseLabelClasses(this.theme([ css.class1, css.class2 ])) }\n */\nexport function parseLabelClasses(classes: SupportedClassName | SupportedClassName[]): string {\n\treturn Array.isArray(classes) ? classes.filter((str) => str).join(' ') : classes || '';\n}\n\nexport const LabelBase = ThemedMixin(WidgetBase);\n\n@theme(css)\nexport default class Label extends LabelBase<LabelProperties>  {\n\n\trender(): DNode {\n\t\tconst {\n\t\t\tforId,\n\t\t\tlabel\n\t\t} = this.properties;\n\n\t\t// assign string or object label properites with defaults\n\t\tlet labelProps: LabelOptions;\n\t\tif (typeof label === 'string') {\n\t\t\tlabelProps = assign({}, labelDefaults, { content: label });\n\t\t}\n\t\telse {\n\t\t\tlabelProps = assign({}, labelDefaults, label);\n\t\t}\n\n\t\t// add label text node to children\n\t\tconst labelText = v('span', {\n\t\t\tinnerHTML: labelProps.content,\n\t\t\tclasses: [ this.theme(css.labelText), labelProps.hidden ? baseCss.visuallyHidden : null ]\n\t\t});\n\t\tif (labelProps.before) {\n\t\t\tthis.children.unshift(labelText);\n\t\t}\n\t\telse {\n\t\t\tthis.children.push(labelText);\n\t\t}\n\n\t\treturn v('label', {\n\t\t\tclasses: this.theme(css.root),\n\t\t\tfor: forId\n\t\t}, this.children);\n\t}\n}\n"]}