import { WidgetBase } from '@dojo/widget-core/WidgetBase';
import { DNode, SupportedClassName } from '@dojo/widget-core/interfaces';
import { ThemedMixin, ThemedProperties } from '@dojo/widget-core/mixins/Themed';
/**
 * Label settings for form label text content, position (before or after), and visibility
 */
export interface LabelOptions {
    content: string;
    before?: boolean;
    hidden?: boolean;
}
/**
 * @type LabelProperties
 *
 * Properties that can be set on a Label component
 *
 * @property forId     ID to explicitly associate the label with an input element
 * @property label      Label settings for form label text, position, and visibility
 */
export interface LabelProperties extends ThemedProperties {
    forId?: string;
    label: string | LabelOptions;
}
/**
 * This is a helper function for using `extraClasses` with Label.
 * It can be used as follows:
 * extraClasses: { root: parseLabelClasses(this.theme([ css.class1, css.class2 ])) }
 */
export declare function parseLabelClasses(classes: SupportedClassName | SupportedClassName[]): string;
export declare const LabelBase: (new (...args: any[]) => ThemedMixin<{}>) & typeof WidgetBase;
export default class Label extends LabelBase<LabelProperties> {
    render(): DNode;
}
