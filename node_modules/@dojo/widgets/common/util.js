(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "@dojo/shim/global", "sinon"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var global_1 = require("@dojo/shim/global");
    var sinon_1 = require("sinon");
    function createResolvers() {
        var rAFStub;
        var rICStub;
        function resolveRAF() {
            for (var i = 0; i < rAFStub.callCount; i++) {
                rAFStub.getCall(i).args[0]();
            }
            rAFStub.reset();
        }
        function resolveRIC() {
            for (var i = 0; i < rICStub.callCount; i++) {
                rICStub.getCall(i).args[0]();
            }
            rICStub.reset();
        }
        return {
            resolve: function () {
                resolveRAF();
                resolveRIC();
            },
            stub: function () {
                rAFStub = sinon_1.stub(global_1.default, 'requestAnimationFrame').returns(1);
                if (global_1.default.requestIdleCallback) {
                    rICStub = sinon_1.stub(global_1.default, 'requestIdleCallback').returns(1);
                }
                else {
                    rICStub = sinon_1.stub(global_1.default, 'setTimeout').returns(1);
                }
            },
            restore: function () {
                rAFStub.restore();
                rICStub.restore();
            }
        };
    }
    exports.createResolvers = createResolvers;
});
//# sourceMappingURL=util.js.map