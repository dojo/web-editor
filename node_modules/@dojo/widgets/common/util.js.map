{"version":3,"file":"util.js","sourceRoot":"","sources":["util.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,4CAAuC;IACvC,+BAAwC;IAiBxC;QACC,IAAI,OAAkB,CAAC;QACvB,IAAI,OAAkB,CAAC;QAEvB;YACC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC5C,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YAC9B,CAAC;YACD,OAAO,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC;QAED;YACC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC5C,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YAC9B,CAAC;YACD,OAAO,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC;QAED,MAAM,CAAC;YACN,OAAO;gBACN,UAAU,EAAE,CAAC;gBACb,UAAU,EAAE,CAAC;YACd,CAAC;YACD,IAAI;gBACH,OAAO,GAAG,YAAI,CAAC,gBAAM,EAAE,uBAAuB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC3D,EAAE,CAAC,CAAC,gBAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC;oBAChC,OAAO,GAAG,YAAI,CAAC,gBAAM,EAAE,qBAAqB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC1D,CAAC;gBACD,IAAI,CAAC,CAAC;oBACL,OAAO,GAAG,YAAI,CAAC,gBAAM,EAAE,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACjD,CAAC;YACF,CAAC;YACD,OAAO;gBACN,OAAO,CAAC,OAAO,EAAE,CAAC;gBAClB,OAAO,CAAC,OAAO,EAAE,CAAC;YACnB,CAAC;SACD,CAAC;IACH,CAAC;IArCD,0CAqCC","sourcesContent":["import global from '@dojo/shim/global';\nimport { stub, SinonStub } from 'sinon';\n\nexport const enum Keys {\n\tDown = 40,\n\tEnd = 35,\n\tEnter = 13,\n\tEscape = 27,\n\tHome = 36,\n\tLeft = 37,\n\tPageDown = 34,\n\tPageUp = 33,\n\tRight = 39,\n\tSpace = 32,\n\tTab = 9,\n\tUp = 38\n}\n\nexport function createResolvers() {\n\tlet rAFStub: SinonStub;\n\tlet rICStub: SinonStub;\n\n\tfunction resolveRAF() {\n\t\tfor (let i = 0; i < rAFStub.callCount; i++) {\n\t\t\trAFStub.getCall(i).args[0]();\n\t\t}\n\t\trAFStub.reset();\n\t}\n\n\tfunction resolveRIC() {\n\t\tfor (let i = 0; i < rICStub.callCount; i++) {\n\t\t\trICStub.getCall(i).args[0]();\n\t\t}\n\t\trICStub.reset();\n\t}\n\n\treturn {\n\t\tresolve() {\n\t\t\tresolveRAF();\n\t\t\tresolveRIC();\n\t\t},\n\t\tstub() {\n\t\t\trAFStub = stub(global, 'requestAnimationFrame').returns(1);\n\t\t\tif (global.requestIdleCallback) {\n\t\t\t\trICStub = stub(global, 'requestIdleCallback').returns(1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\trICStub = stub(global, 'setTimeout').returns(1);\n\t\t\t}\n\t\t},\n\t\trestore() {\n\t\t\trAFStub.restore();\n\t\t\trICStub.restore();\n\t\t}\n\t};\n}\n"]}