{"version":3,"file":"Radio.js","sourceRoot":"","sources":["Radio.ts"],"names":[],"mappings":"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","sourcesContent":["import { WidgetBase } from '@dojo/widget-core/WidgetBase';\nimport { DNode } from '@dojo/widget-core/interfaces';\nimport { ThemedMixin, ThemedProperties, theme } from '@dojo/widget-core/mixins/Themed';\nimport Label, { LabelOptions, parseLabelClasses } from '../label/Label';\nimport { v, w } from '@dojo/widget-core/d';\nimport * as css from './styles/radio.m.css';\n\n/**\n * @type RadioProperties\n *\n * Properties that can be set on a Radio component\n *\n * @property checked          Checked/unchecked property of the radio\n * @property describedBy      ID of an element that provides more descriptive text\n * @property disabled         Prevents the user from interacting with the form field\n * @property invalid          Indicates the valid is invalid, or required and not filled in\n * @property label            Label settings for form label text, position, and visibility\n * @property name             The form widget's name\n * @property readOnly         Allows or prevents user interaction\n * @property required         Whether or not a value is required\n * @property value            The current value\n * @property onBlur           Called when the input loses focus\n * @property onChange         Called when the node's 'change' event is fired\n * @property onClick          Called when the input is clicked\n * @property onFocus          Called when the input is focused\n * @property onMouseDown      Called on the input's mousedown event\n * @property onMouseUp        Called on the input's mouseup event\n * @property onTouchStart     Called on the input's touchstart event\n * @property onTouchEnd       Called on the input's touchend event\n * @property onTouchCancel    Called on the input's touchcancel event\n */\nexport interface RadioProperties extends ThemedProperties {\n\tchecked?: boolean;\n\tdescribedBy?: string;\n\tdisabled?: boolean;\n\tinvalid?: boolean;\n\tlabel?: string | LabelOptions;\n\tname?: string;\n\treadOnly?: boolean;\n\trequired?: boolean;\n\tvalue?: string;\n\tonBlur?(event: FocusEvent): void;\n\tonChange?(event: Event): void;\n\tonClick?(event: MouseEvent): void;\n\tonFocus?(event: FocusEvent): void;\n\tonMouseDown?(event: MouseEvent): void;\n\tonMouseUp?(event: MouseEvent): void;\n\tonTouchStart?(event: TouchEvent): void;\n\tonTouchEnd?(event: TouchEvent): void;\n\tonTouchCancel?(event: TouchEvent): void;\n}\n\nexport const RadioBase = ThemedMixin(WidgetBase);\n\n@theme(css)\nexport default class Radio extends RadioBase<RadioProperties> {\n\tprivate _focused = false;\n\n\tprivate _onBlur (event: FocusEvent) {\n\t\tthis._focused = false;\n\t\tthis.properties.onBlur && this.properties.onBlur(event);\n\t\tthis.invalidate();\n\t}\n\tprivate _onChange (event: Event) { this.properties.onChange && this.properties.onChange(event); }\n\tprivate _onClick (event: MouseEvent) { this.properties.onClick && this.properties.onClick(event); }\n\tprivate _onFocus (event: FocusEvent) {\n\t\tthis._focused = true;\n\t\tthis.properties.onFocus && this.properties.onFocus(event);\n\t\tthis.invalidate();\n\t}\n\tprivate _onMouseDown (event: MouseEvent) { this.properties.onMouseDown && this.properties.onMouseDown(event); }\n\tprivate _onMouseUp (event: MouseEvent) { this.properties.onMouseUp && this.properties.onMouseUp(event); }\n\tprivate _onTouchStart (event: TouchEvent) { this.properties.onTouchStart && this.properties.onTouchStart(event); }\n\tprivate _onTouchEnd (event: TouchEvent) { this.properties.onTouchEnd && this.properties.onTouchEnd(event); }\n\tprivate _onTouchCancel (event: TouchEvent) { this.properties.onTouchCancel && this.properties.onTouchCancel(event); }\n\n\tprotected getModifierClasses(): (string | null)[] {\n\t\tconst {\n\t\t\tchecked = false,\n\t\t\tdisabled,\n\t\t\tinvalid,\n\t\t\treadOnly,\n\t\t\trequired\n\t\t} = this.properties;\n\n\t\treturn [\n\t\t\tchecked ? css.checked : null,\n\t\t\tdisabled ? css.disabled : null,\n\t\t\tthis._focused ? css.focused : null,\n\t\t\tinvalid ? css.invalid : null,\n\t\t\tinvalid === false ? css.valid : null,\n\t\t\treadOnly ? css.readonly : null,\n\t\t\trequired ? css.required : null\n\t\t];\n\t}\n\n\trender(): DNode {\n\t\tconst {\n\t\t\tchecked = false,\n\t\t\tdescribedBy,\n\t\t\tdisabled,\n\t\t\tinvalid,\n\t\t\tlabel,\n\t\t\tname,\n\t\t\treadOnly,\n\t\t\trequired,\n\t\t\tvalue\n\t\t} = this.properties;\n\n\t\tconst radio = v('div', { classes: this.theme(css.inputWrapper) }, [\n\t\t\tv('input', {\n\t\t\t\tclasses: this.theme(css.input),\n\t\t\t\tchecked,\n\t\t\t\t'aria-describedby': describedBy,\n\t\t\t\tdisabled,\n\t\t\t\t'aria-invalid': invalid ? 'true' : null,\n\t\t\t\tname,\n\t\t\t\treadOnly,\n\t\t\t\t'aria-readonly': readOnly ? 'true' : null,\n\t\t\t\trequired,\n\t\t\t\ttype: 'radio',\n\t\t\t\tvalue,\n\t\t\t\tonblur: this._onBlur,\n\t\t\t\tonchange: this._onChange,\n\t\t\t\tonclick: this._onClick,\n\t\t\t\tonfocus: this._onFocus,\n\t\t\t\tonmousedown: this._onMouseDown,\n\t\t\t\tonmouseup: this._onMouseUp,\n\t\t\t\tontouchstart: this._onTouchStart,\n\t\t\t\tontouchend: this._onTouchEnd,\n\t\t\t\tontouchcancel: this._onTouchCancel\n\t\t\t})\n\t\t]);\n\n\t\tlet radioWidget;\n\n\t\tif (label) {\n\t\t\tradioWidget = w(Label, {\n\t\t\t\textraClasses: { root: parseLabelClasses(this.theme([ css.root, ...this.getModifierClasses() ])) },\n\t\t\t\tlabel,\n\t\t\t\ttheme: this.properties.theme\n\t\t\t}, [ radio ]);\n\t\t}\n\t\telse {\n\t\t\tradioWidget = v('div', {\n\t\t\t\tclasses: this.theme([ css.root, ...this.getModifierClasses() ])\n\t\t\t}, [ radio]);\n\t\t}\n\n\t\treturn radioWidget;\n\t}\n}\n"]}