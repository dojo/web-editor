{"version":3,"file":"TimePicker.js","sourceRoot":"","sources":["TimePicker.ts"],"names":[],"mappings":";;;;;;;;;;;;IAAA,4CAA6C;IAC7C,yCAA2C;IAE3C,0DAAuF;IACvF,2DAA0D;IAC1D,0EAAyE;IACzE,+CAA8C;IAC9C,+CAAiD;IACjD,iDAA4C;IAC5C,wCAAwE;IA6ExE;;;OAGG;IACH,IAAM,YAAY,GAAG,wBAAwB,CAAC;IAE9C;;;;;;;OAOG;IACH,oBAA2B,KAA0B,EAAE,GAAwB,EAAE,IAAS;QAA/D,sBAAA,EAAA,kBAA0B;QAAE,oBAAA,EAAA,gBAAwB;QAAE,qBAAA,EAAA,SAAS;QACzF,IAAM,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;QACjC,IAAM,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;QACrC,IAAM,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,IAAI,IAAI,GAAG,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAErC,IAAM,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;QACtB,IAAM,OAAO,GAAa,EAAE,CAAC;QAE7B,OAAO,IAAI,IAAI,OAAO,EAAE,CAAC;YACxB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnB,IAAI,IAAI,CAAC,CAAC;QACX,CAAC;QAED,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,IAAY;YAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACnB,MAAM,CAAC;gBACN,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE;gBACrB,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE;gBACzB,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE;aACzB,CAAC;QACH,CAAC,CAAC,CAAC;IACJ,CAAC;IAvBD,gCAuBC;IAED;;;;;;;OAOG;IACH,iBAAiB,KAAgB,EAAE,IAAiB;QAAjB,qBAAA,EAAA,WAAW,IAAI,EAAE;QAC3C,IAAA,iBAAI,EAAE,qBAAM,EAAE,qBAAM,CAAW;QACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACpB,IAAI,CAAC,UAAU,CAAC,MAAgB,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,MAAgB,CAAC,CAAC;QAClC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IACvB,CAAC;IAED;;;;;;;;OAQG;IACH,oBAA4B,KAAyB;QACpD,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC/B,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC/B,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;YACzE,CAAC;YAEK,IAAA,4FAA+E,EAA7E,YAAI,EAAE,cAAM,EAAE,UAAU,EAAV,+BAAU,CAAsD;YACtF,MAAM,CAAC,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,MAAM,QAAA,EAAe,CAAC;QAC9C,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACd,CAAC;IAXD,gCAWC;IAEY,QAAA,cAAc,GAAG,gBAAW,CAAC,uBAAU,CAAC,CAAC;IAGtD;QAAgC,sCAAoC;QAApE;;QA4KA,CAAC;QAzKQ,iCAAY,GAApB,UAAqB,KAAgB;YAC5B,IAAA,yBAAS,EAAT,8BAAS,CAAqB;YAC9B,IAAA,iBAAI,EAAE,qBAAM,EAAE,qBAAM,CAAW;YAEvC,MAAM,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,CAAE,IAAI,EAAE,MAAM,CAAE,CAAC,CAAC,CAAC,CAAE,IAAI,EAAE,MAAM,EAAE,MAAM,CAAE,CAAC;iBAC/D,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,iBAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAA9B,CAA8B,CAAC;iBAC3C,IAAI,CAAC,GAAG,CAAC,CAAC;QACb,CAAC;QAEO,oCAAe,GAAvB,UAAwB,KAAgB;YAC/B,IAAA,+CAAc,CAAqB;YAC3C,IAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;YAChC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC1E,CAAC;QAEO,kCAAa,GAArB,UAAsB,KAAsB;YAC3C,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACtE,CAAC;QAEO,oCAAe,GAAvB,UAAwB,KAAsB;YAC7C,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC1E,CAAC;QAEO,mCAAc,GAAtB,UAAuB,KAAsB;YAC5C,IAAI,CAAC,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACxE,CAAC;QAEO,sCAAiB,GAAzB,UAA0B,KAAa;YACtC,IAAI,CAAC,UAAU,CAAC,gBAAgB,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QAChG,CAAC;QAES,uCAAkB,GAA5B;YACO,IAAA,oBAKa,EAJlB,sBAAQ,EACR,oBAAO,EACP,sBAAQ,EACR,sBAAQ,CACW;YACpB,MAAM,CAAC;gBACN,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI;gBAC9B,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI;gBAC5B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI;gBAC9B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI;aAC9B,CAAC;QACH,CAAC;QAES,+BAAU,GAApB;YACC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;YACrB,CAAC;YAEK,IAAA,oBAAsC,EAApC,YAAG,EAAE,gBAAK,EAAE,cAAI,CAAqB;YAC7C,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACrB,CAAC;QAKS,wCAAmB,GAA7B;YACC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACrB,CAAC;QAES,sCAAiB,GAA3B;YACO,IAAA,oBAkBa,EAjBlB,wBAAS,EACT,sBAAQ,EACR,8BAAY,EACZ,oCAAe,EACf,oBAAO,EACP,sCAAgB,EAChB,gBAAK,EACL,kBAAM,EACN,sBAAQ,EACR,oBAAO,EACP,8BAAY,EACZ,4BAAW,EACX,oBAAO,EACP,sBAAQ,EACR,sBAAQ,EACR,gBAAK,EACL,gBAAK,CACc;YAEpB,MAAM,CAAC,KAAC,CAAC,kBAAQ,EAAE;gBAClB,SAAS,WAAA;gBACT,QAAQ,UAAA;gBACR,YAAY,cAAA;gBACZ,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC/C,eAAe,iBAAA;gBACf,OAAO,SAAA;gBACP,gBAAgB,EAAE,gBAAgB;gBAClC,KAAK,OAAA;gBACL,MAAM,QAAA;gBACN,QAAQ,UAAA;gBACR,OAAO,SAAA;gBACP,YAAY,cAAA;gBACZ,gBAAgB,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;gBACnD,WAAW,aAAA;gBACX,QAAQ,UAAA;gBACR,QAAQ,UAAA;gBACR,OAAO,EAAE,OAAO;gBAChB,KAAK,OAAA;gBACL,KAAK,OAAA;aACL,CAAC,CAAC;QACJ,CAAC;QAES,sCAAiB,GAA3B;YACO,IAAA,oBAWa,EAVlB,sBAAQ,EACR,YAAG,EACH,oCAAe,EACf,oBAAO,EACP,cAAI,EACJ,sBAAQ,EACR,sBAAQ,EACR,gBAAK,EACL,cAAI,EACJ,gBAAK,CACc;YAEpB,MAAM,CAAC,KAAC,CAAC,OAAO,EAAE;gBACjB,kBAAkB,EAAE,eAAe,IAAI,eAAe,CAAC,WAAW;gBAClE,cAAc,EAAE,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI;gBACvC,eAAe,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI;gBACzC,OAAO,EAAE,IAAI,CAAC,KAAK,mBAAG,GAAG,CAAC,KAAK,GAAK,IAAI,CAAC,kBAAkB,EAAE,EAAG;gBAChE,QAAQ,UAAA;gBACR,OAAO,SAAA;gBACP,GAAG,EAAE,cAAc;gBACnB,GAAG,EAAE,GAAG;gBACR,GAAG,EAAE,KAAK;gBACV,IAAI,MAAA;gBACJ,MAAM,EAAE,IAAI,CAAC,aAAa;gBAC1B,QAAQ,EAAE,IAAI,CAAC,eAAe;gBAC9B,OAAO,EAAE,IAAI,CAAC,cAAc;gBAC5B,QAAQ,UAAA;gBACR,QAAQ,UAAA;gBACR,IAAI,MAAA;gBACJ,IAAI,EAAE,MAAM;gBACZ,KAAK,OAAA;aACL,CAAC,CAAC;QACJ,CAAC;QAED,2BAAM,GAAN;YACO,IAAA,oBAGa,EAFlB,gBAAK,EACL,sCAAgB,CACG;YAEpB,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACtB,IAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACvC,IAAI,QAAQ,GAAY,CAAE,KAAK,CAAE,CAAC;gBAElC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACX,QAAQ,GAAG,CAAE,KAAC,CAAC,eAAK,EAAE;4BACrB,YAAY,EAAE,EAAE,IAAI,EAAE,yBAAiB,CAAC,IAAI,CAAC,KAAK,mBAAG,GAAG,CAAC,KAAK,GAAK,IAAI,CAAC,kBAAkB,EAAE,EAAG,CAAC,EAAE;4BAClG,KAAK,OAAA;4BACL,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;yBAC5B,EAAE,CAAE,KAAK,CAAE,CAAC,CAAE,CAAC;gBACjB,CAAC;gBAED,MAAM,CAAC,KAAC,CAAC,MAAM,EAAE;oBAChB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC;oBAC7B,GAAG,EAAE,MAAM;iBACX,EAAE,QAAQ,CAAC,CAAC;YACd,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACjC,CAAC;QA7GD;YAHC,2BAAY,CAAC,OAAO,EAAE,WAAI,CAAC;YAC3B,2BAAY,CAAC,KAAK,EAAE,WAAI,CAAC;YACzB,2BAAY,CAAC,MAAM,EAAE,WAAI,CAAC;;;;6DAG1B;QAhEW,UAAU;YADtB,cAAK,CAAC,GAAG,CAAC;WACE,UAAU,CA4KtB;QAAD,iBAAC;KAAA,AA5KD,CAAgC,sBAAc,GA4K7C;IA5KY,gCAAU;IA8KvB,kBAAe,UAAU,CAAC","sourcesContent":["import { padStart } from '@dojo/shim/string';\nimport { v, w } from '@dojo/widget-core/d';\nimport { DNode } from '@dojo/widget-core/interfaces';\nimport ThemedMixin, { theme, ThemedProperties } from '@dojo/widget-core/mixins/Themed';\nimport { WidgetBase } from '@dojo/widget-core/WidgetBase';\nimport { diffProperty } from '@dojo/widget-core/decorators/diffProperty';\nimport { auto } from '@dojo/widget-core/diff';\nimport * as css from './styles/timePicker.m.css';\nimport ComboBox from '../combobox/ComboBox';\nimport Label, { LabelOptions, parseLabelClasses } from '../label/Label';\nimport { TextInputProperties } from '../textinput/TextInput';\n\ninterface FocusInputEvent extends FocusEvent {\n\ttarget: HTMLInputElement;\n}\n\n/**\n * @type TimePickerProperties\n *\n * Properties that can be set on a TimePicker component\n *\n * @property autoBlur           Determines whether the input should blur after value selection\n * @property clearable          Determines whether the custom input should be able to be cleared\n * @property CustomOptionItem   Can be used to render a custom option\n * @property CustomOptionMenu   Can be used to render a custom option menu\n * @property disabled           Prevents user interaction and styles content accordingly\n * @property end                The maximum time to display in the menu (defaults to '23:59:59')\n * @property getOptionLabel     Can be used to get the text label of an option based on the underlying option object\n * @property inputProperties    TextInput properties to set on the underlying input\n * @property invalid            Determines if this input is valid\n * @property isOptionDisabled   Used to determine if an item should be disabled\n * @property label              Label settings for form label text, position, and visibility\n * @property name               The native input's name.\n * @property onBlur             Called when the input is blurred\n * @property onChange           Called when the value changes\n * @property onFocus            Called when the input is focused\n * @property onMenuChange       Called when menu visibility changes\n * @property onRequestOptions   Called when options are shown; should be used to set `options`\n * @property openOnFocus        Determines whether the result list should open when the input is focused\n * @property options            Options for the current input; should be set in response to `onRequestOptions`\n * @property readOnly           Prevents user interaction\n * @property required           Determines if this input is required, styles accordingly\n * @property start              The minimum time to display in the menu (defaults to '00:00:00')\n * @property step               The number of seconds between each option in the menu (defaults to 60)\n * @property useNativeElement   Use the native <input type=\"time\"> element if true\n * @property value              Value to set on the input\n */\nexport interface TimePickerProperties extends ThemedProperties {\n\tautoBlur?: boolean;\n\tclearable?: boolean;\n\tdisabled?: boolean;\n\tend?: string;\n\tgetOptionLabel?(option: TimeUnits): string;\n\tinputProperties?: TextInputProperties;\n\tinvalid?: boolean;\n\tisOptionDisabled?(result: any): boolean;\n\tlabel?: string | LabelOptions;\n\tname?: string;\n\tonBlur?(value: string): void;\n\tonChange?(value: string): void;\n\tonFocus?(value: string): void;\n\tonMenuChange?(open: boolean): void;\n\tonRequestOptions?(value: string, options: TimeUnits[]): void;\n\topenOnFocus?: boolean;\n\toptions?: TimeUnits[];\n\treadOnly?: boolean;\n\trequired?: boolean;\n\tstart?: string;\n\tstep?: number;\n\tuseNativeElement?: boolean;\n\tvalue?: string;\n}\n\n/**\n * An object representing a dateless time (without milliseconds).\n *\n * @property hour    The number of hours.\n * @property minute  An optional number of minutes.\n * @property second  An optional number of seconds.\n */\nexport interface TimeUnits {\n\thour: number;\n\tminute?: number;\n\tsecond?: number;\n}\n\n/**\n * @private\n * Regular epression that matches a standard time string ('HH:mm:ss').\n */\nconst TIME_PATTERN = /^\\d{2}:\\d{2}(:\\d{2})?$/;\n\n/**\n * Generate an array of time unit objects from the specified start date to the specified end date.\n *\n * @param start    The start time. Defaults to midnight.\n * @param end      The end time. Defaults to 23:59:59.\n * @param step     The amount of time in seconds between each step. Defaults to 60.\n * @return         An array of time unit objects.\n */\nexport function getOptions(start: string = '00:00:00', end: string = '23:59:59', step = 60): TimeUnits[] {\n\tconst endUnits = parseUnits(end);\n\tconst startUnits = parseUnits(start);\n\tconst endTime = getTime(endUnits);\n\tconst date = new Date();\n\tlet time = getTime(startUnits, date);\n\n\tconst i = step * 1000;\n\tconst options: number[] = [];\n\n\twhile (time <= endTime) {\n\t\toptions.push(time);\n\t\ttime += i;\n\t}\n\n\treturn options.map((time: number) => {\n\t\tdate.setTime(time);\n\t\treturn {\n\t\t\thour: date.getHours(),\n\t\t\tminute: date.getMinutes(),\n\t\t\tsecond: date.getSeconds()\n\t\t};\n\t});\n}\n\n/**\n * @private\n * Create a numeric timestamp for the specified hour, minute, and second units.\n *\n * @param units   An object containing the hours, minutes, and seconds for the time.\n * @param date    An optional date object.\n * @return        The timestamp, in milliseconds, according to universal time.\n */\nfunction getTime(units: TimeUnits, date = new Date()) {\n\tconst { hour, minute, second } = units;\n\tdate.setHours(hour);\n\tdate.setMinutes(minute as number);\n\tdate.setSeconds(second as number);\n\tdate.setMilliseconds(0);\n\treturn date.getTime();\n}\n\n/**\n * Convert a standard time string into an object with `hour`, `minute`, and `second` number properties.\n *\n * For example, '12:30' is converted to `{ hour: 12, minute: 30, second: 0 }`, and '19:03:27' is converted\n * to `{ hour: 19, minute: 3, second: 27 }`.\n *\n * @param value   A standard time string or an object with `hour`, `minute`, and `second` properties.\n * @return        An object containing `hour`, `second`, and `number` properties.\n */\nexport function parseUnits (value: string | TimeUnits): TimeUnits {\n\tif (typeof value === 'string') {\n\t\tif (!TIME_PATTERN.test(value)) {\n\t\t\tthrow new Error('Time strings must be in the format HH:mm or HH:mm:ss');\n\t\t}\n\n\t\tconst [ hour, minute, second = 0 ] = value.split(':').map(unit => parseInt(unit, 10));\n\t\treturn { hour, minute, second } as TimeUnits;\n\t}\n\n\treturn value;\n}\n\nexport const TimePickerBase = ThemedMixin(WidgetBase);\n\n@theme(css)\nexport class TimePicker extends TimePickerBase<TimePickerProperties> {\n\tprotected options: TimeUnits[] | null;\n\n\tprivate _formatUnits(units: TimeUnits): string {\n\t\tconst { step = 60 } = this.properties;\n\t\tconst { hour, minute, second } = units;\n\n\t\treturn (step >= 60 ? [ hour, minute ] : [ hour, minute, second ])\n\t\t\t.map(unit => padStart(String(unit), 2, '0'))\n\t\t\t.join(':');\n\t}\n\n\tprivate _getOptionLabel(value: TimeUnits) {\n\t\tconst { getOptionLabel } = this.properties;\n\t\tconst units = parseUnits(value);\n\t\treturn getOptionLabel ? getOptionLabel(units) : this._formatUnits(units);\n\t}\n\n\tprivate _onNativeBlur(event: FocusInputEvent) {\n\t\tthis.properties.onBlur && this.properties.onBlur(event.target.value);\n\t}\n\n\tprivate _onNativeChange(event: FocusInputEvent) {\n\t\tthis.properties.onChange && this.properties.onChange(event.target.value);\n\t}\n\n\tprivate _onNativeFocus(event: FocusInputEvent) {\n\t\tthis.properties.onFocus && this.properties.onFocus(event.target.value);\n\t}\n\n\tprivate _onRequestOptions(value: string) {\n\t\tthis.properties.onRequestOptions && this.properties.onRequestOptions(value, this.getOptions());\n\t}\n\n\tprotected getModifierClasses(): (string | null)[] {\n\t\tconst {\n\t\t\tdisabled,\n\t\t\tinvalid,\n\t\t\treadOnly,\n\t\t\trequired\n\t\t} = this.properties;\n\t\treturn [\n\t\t\tdisabled ? css.disabled : null,\n\t\t\tinvalid ? css.invalid : null,\n\t\t\treadOnly ? css.readonly : null,\n\t\t\trequired ? css.required : null\n\t\t];\n\t}\n\n\tprotected getOptions() {\n\t\tif (this.options) {\n\t\t\treturn this.options;\n\t\t}\n\n\t\tconst { end, start, step } = this.properties;\n\t\tthis.options = getOptions(start, end, step);\n\t\treturn this.options;\n\t}\n\n\t@diffProperty('start', auto)\n\t@diffProperty('end', auto)\n\t@diffProperty('step', auto)\n\tprotected onPropertiesChanged() {\n\t\tthis.options = null;\n\t}\n\n\tprotected renderCustomInput(): DNode {\n\t\tconst {\n\t\t\tclearable,\n\t\t\tdisabled,\n\t\t\textraClasses,\n\t\t\tinputProperties,\n\t\t\tinvalid,\n\t\t\tisOptionDisabled,\n\t\t\tlabel,\n\t\t\tonBlur,\n\t\t\tonChange,\n\t\t\tonFocus,\n\t\t\tonMenuChange,\n\t\t\topenOnFocus,\n\t\t\toptions,\n\t\t\treadOnly,\n\t\t\trequired,\n\t\t\ttheme,\n\t\t\tvalue\n\t\t} = this.properties;\n\n\t\treturn w(ComboBox, {\n\t\t\tclearable,\n\t\t\tdisabled,\n\t\t\textraClasses,\n\t\t\tgetResultLabel: this._getOptionLabel.bind(this),\n\t\t\tinputProperties,\n\t\t\tinvalid,\n\t\t\tisResultDisabled: isOptionDisabled,\n\t\t\tlabel,\n\t\t\tonBlur,\n\t\t\tonChange,\n\t\t\tonFocus,\n\t\t\tonMenuChange,\n\t\t\tonRequestResults: this._onRequestOptions.bind(this),\n\t\t\topenOnFocus,\n\t\t\treadOnly,\n\t\t\trequired,\n\t\t\tresults: options,\n\t\t\ttheme,\n\t\t\tvalue\n\t\t});\n\t}\n\n\tprotected renderNativeInput(): DNode {\n\t\tconst {\n\t\t\tdisabled,\n\t\t\tend,\n\t\t\tinputProperties,\n\t\t\tinvalid,\n\t\t\tname,\n\t\t\treadOnly,\n\t\t\trequired,\n\t\t\tstart,\n\t\t\tstep,\n\t\t\tvalue\n\t\t} = this.properties;\n\n\t\treturn v('input', {\n\t\t\t'aria-describedby': inputProperties && inputProperties.describedBy,\n\t\t\t'aria-invalid': invalid ? 'true' : null,\n\t\t\t'aria-readonly': readOnly ? 'true' : null,\n\t\t\tclasses: this.theme([ css.input, ...this.getModifierClasses() ]),\n\t\t\tdisabled,\n\t\t\tinvalid,\n\t\t\tkey: 'native-input',\n\t\t\tmax: end,\n\t\t\tmin: start,\n\t\t\tname,\n\t\t\tonblur: this._onNativeBlur,\n\t\t\tonchange: this._onNativeChange,\n\t\t\tonfocus: this._onNativeFocus,\n\t\t\treadOnly,\n\t\t\trequired,\n\t\t\tstep,\n\t\t\ttype: 'time',\n\t\t\tvalue\n\t\t});\n\t}\n\n\trender(): DNode {\n\t\tconst {\n\t\t\tlabel,\n\t\t\tuseNativeElement\n\t\t} = this.properties;\n\n\t\tif (useNativeElement) {\n\t\t\tconst input = this.renderNativeInput();\n\t\t\tlet children: DNode[] = [ input ];\n\n\t\t\tif (label) {\n\t\t\t\tchildren = [ w(Label, {\n\t\t\t\t\textraClasses: { root: parseLabelClasses(this.theme([ css.input, ...this.getModifierClasses() ])) },\n\t\t\t\t\tlabel,\n\t\t\t\t\ttheme: this.properties.theme\n\t\t\t\t}, [ input ]) ];\n\t\t\t}\n\n\t\t\treturn v('span', {\n\t\t\t\tclasses: this.theme(css.root),\n\t\t\t\tkey: 'root'\n\t\t\t}, children);\n\t\t}\n\n\t\treturn this.renderCustomInput();\n\t}\n}\n\nexport default TimePicker;\n"]}