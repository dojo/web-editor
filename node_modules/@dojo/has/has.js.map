{"version":3,"file":"has.js","sourceRoot":"","sources":["has.ts"],"names":[],"mappings":"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","sourcesContent":["import { Require, Config } from './loader';\n\n/**\n * The valid return types from a feature test\n */\nexport type FeatureTestResult = boolean | string | number | undefined | void;\n\n/**\n * A function that tests for a feature and returns a result\n */\nexport type FeatureTest = () => FeatureTestResult;\n\nexport type FeatureTestThenable = PromiseLike<FeatureTestResult>;\n\nfunction isFeatureTestThenable(value: any): value is FeatureTestThenable {\n\treturn value && value.then;\n}\n\n/**\n * A cache of results of feature tests\n */\nexport const testCache: { [feature: string]: FeatureTestResult } = {};\n\n/**\n * A cache of the un-resolved feature tests\n */\nexport const testFunctions: { [feature: string]: FeatureTest } = {};\n\n/**\n * A cache of unresolved thenables (probably promises)\n * @type {{}}\n */\nconst testThenables: { [feature: string]: FeatureTestThenable } = {};\n\nexport interface StaticHasFeatures {\n\t[ feature: string ]: FeatureTestResult;\n}\n\nexport interface DojoHasEnvironment {\n\t/**\n\t * Static features defined in the enviornment that should be used by the `has` module\n\t * instead of run-time detection.\n\t */\n\tstaticFeatures?: StaticHasFeatures | (() => StaticHasFeatures);\n}\n\ndeclare global {\n\tinterface Window {\n\t\t/**\n\t\t * The `dojo/has` enviornment which provides configuration when the module is\n\t\t * loaded.\n\t\t */\n\t\tDojoHasEnvironment?: DojoHasEnvironment;\n\t}\n}\n\n/**\n * A reference to the global scope (`window` in a browser, `global` in NodeJS)\n */\nconst globalScope = (function (): any {\n\t/* istanbul ignore else */\n\tif (typeof window !== 'undefined') {\n\t\t// Browsers\n\t\treturn window;\n\t}\n\telse if (typeof global !== 'undefined') {\n\t\t// Node\n\t\treturn global;\n\t}\n\telse if (typeof self !== 'undefined') {\n\t\t// Web workers\n\t\treturn self;\n\t}\n\t/* istanbul ignore next */\n\treturn {};\n})();\n\n/* Grab the staticFeatures if there are available */\nconst { staticFeatures }: DojoHasEnvironment = globalScope.DojoHasEnvironment || {};\n\n/* Cleaning up the DojoHasEnviornment */\nif ('DojoHasEnvironment' in globalScope) {\n\tdelete globalScope.DojoHasEnvironment;\n}\n\n/**\n * Custom type guard to narrow the `staticFeatures` to either a map or a function that\n * returns a map.\n *\n * @param value The value to guard for\n */\nfunction isStaticFeatureFunction(value: any): value is (() => StaticHasFeatures) {\n\treturn typeof value === 'function';\n}\n\n/**\n * The cache of asserted features that were available in the global scope when the\n * module loaded\n */\nconst staticCache: StaticHasFeatures = staticFeatures\n\t? isStaticFeatureFunction(staticFeatures)\n\t\t? staticFeatures.apply(globalScope)\n\t\t: staticFeatures\n\t: {}; /* Providing an empty cache, if none was in the environment\n\n/**\n * AMD plugin function.\n *\n * Conditional loads modules based on a has feature test value.\n *\n * @param resourceId Gives the resolved module id to load.\n * @param require The loader require function with respect to the module that contained the plugin resource in its\n *                dependency list.\n * @param load Callback to loader that consumes result of plugin demand.\n */\nexport function load(resourceId: string, require: Require, load: (value?: any) => void, config?: Config): void {\n\tresourceId ? require([ resourceId ], load) : load();\n}\n\n/**\n * AMD plugin function.\n *\n * Resolves resourceId into a module id based on possibly-nested tenary expression that branches on has feature test\n * value(s).\n *\n * @param resourceId The id of the module\n * @param normalize Resolves a relative module id into an absolute module id\n */\nexport function normalize(resourceId: string, normalize: (moduleId: string) => string): string | null {\n\tconst tokens: RegExpMatchArray = resourceId.match(/[\\?:]|[^:\\?]*/g) || [];\n\tlet i = 0;\n\n\tfunction get(skip?: boolean): string | null {\n\t\tconst term = tokens[i++];\n\t\tif (term === ':') {\n\t\t\t// empty string module name, resolves to null\n\t\t\treturn null;\n\t\t}\n\t\telse {\n\t\t\t// postfixed with a ? means it is a feature to branch on, the term is the name of the feature\n\t\t\tif (tokens[i++] === '?') {\n\t\t\t\tif (!skip && has(term)) {\n\t\t\t\t\t// matched the feature, get the first value from the options\n\t\t\t\t\treturn get();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// did not match, get the second value, passing over the first\n\t\t\t\t\tget(true);\n\t\t\t\t\treturn get(skip);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// a module\n\t\t\treturn term;\n\t\t}\n\t}\n\n\tconst id = get();\n\n\treturn id && normalize(id);\n}\n\n/**\n * Check if a feature has already been registered\n *\n * @param feature the name of the feature\n */\nexport function exists(feature: string): boolean {\n\tconst normalizedFeature = feature.toLowerCase();\n\n\treturn Boolean(normalizedFeature in staticCache || normalizedFeature in testCache || testFunctions[normalizedFeature]);\n}\n\n/**\n * Register a new test for a named feature.\n *\n * @example\n * has.add('dom-addeventlistener', !!document.addEventListener);\n *\n * @example\n * has.add('touch-events', function () {\n *    return 'ontouchstart' in document\n * });\n *\n * @param feature the name of the feature\n * @param value the value reported of the feature, or a function that will be executed once on first test\n * @param overwrite if an existing value should be overwritten. Defaults to false.\n */\nexport function add(feature: string, value: FeatureTest | FeatureTestResult | FeatureTestThenable, overwrite: boolean = false): void {\n\tconst normalizedFeature = feature.toLowerCase();\n\n\tif (exists(normalizedFeature) && !overwrite && !(normalizedFeature in staticCache)) {\n\t\tthrow new TypeError(`Feature \"${feature}\" exists and overwrite not true.`);\n\t}\n\n\tif (typeof value === 'function') {\n\t\ttestFunctions[normalizedFeature] = value;\n\t}\n\telse if (isFeatureTestThenable(value)) {\n\t\ttestThenables[ feature ] = value.then((resolvedValue: FeatureTestResult) => {\n\t\t\ttestCache [ feature ] = resolvedValue;\n\t\t\tdelete testThenables [ feature ];\n\t\t}, () => {\n\t\t\tdelete testThenables [ feature ];\n\t\t});\n\t}\n\telse {\n\t\ttestCache[normalizedFeature] = value;\n\t\tdelete testFunctions[normalizedFeature];\n\t}\n}\n\n/**\n * Return the current value of a named feature.\n *\n * @param feature The name (if a string) or identifier (if an integer) of the feature to test.\n */\nexport default function has(feature: string): FeatureTestResult {\n\tlet result: FeatureTestResult;\n\n\tconst normalizedFeature = feature.toLowerCase();\n\n\tif (normalizedFeature in staticCache) {\n\t\tresult = staticCache[normalizedFeature];\n\t}\n\telse if (testFunctions[normalizedFeature]) {\n\t\tresult = testCache[normalizedFeature] = testFunctions[normalizedFeature].call(null);\n\t\tdelete testFunctions[normalizedFeature];\n\t}\n\telse if (normalizedFeature in testCache) {\n\t\tresult = testCache[normalizedFeature];\n\t}\n\telse if (feature in testThenables) {\n\t\treturn false;\n\t}\n\telse {\n\t\tthrow new TypeError(`Attempt to detect unregistered has feature \"${feature}\"`);\n\t}\n\n\treturn result;\n}\n\n/*\n * Out of the box feature tests\n */\n\n/* Environments */\n\n/* Used as a value to provide a debug only code path */\nadd('debug', true);\n\n/* Detects if the environment is \"browser like\" */\nadd('host-browser', typeof document !== 'undefined' && typeof location !== 'undefined');\n\n/* Detects if the environment appears to be NodeJS */\nadd('host-node', function () {\n\tif (typeof process === 'object' && process.versions && process.versions.node) {\n\t\treturn process.versions.node;\n\t}\n});\n"]}