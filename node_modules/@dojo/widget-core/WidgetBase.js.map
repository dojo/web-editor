{"version":3,"file":"WidgetBase.js","sourceRoot":"","sources":["WidgetBase.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventTypedObject } from '@dojo/interfaces/core';\nimport Map from '@dojo/shim/Map';\nimport WeakMap from '@dojo/shim/WeakMap';\nimport { v } from './d';\nimport { auto } from './diff';\nimport {\n\tAfterRender,\n\tBeforeProperties,\n\tBeforeRender,\n\tCoreProperties,\n\tDiffPropertyReaction,\n\tDNode,\n\tRender,\n\tWidgetMetaBase,\n\tWidgetMetaConstructor,\n\tWidgetBaseInterface,\n\tWidgetProperties\n} from './interfaces';\nimport RegistryHandler from './RegistryHandler';\nimport NodeHandler from './NodeHandler';\nimport { widgetInstanceMap } from './vdom';\nimport { isWidgetBaseConstructor, WIDGET_BASE_TYPE } from './Registry';\n\nenum WidgetRenderState {\n\tIDLE = 1,\n\tPROPERTIES,\n\tCHILDREN,\n\tRENDER\n}\n\ninterface ReactionFunctionArguments {\n\tpreviousProperties: any;\n\tnewProperties: any;\n\tchanged: boolean;\n}\n\ninterface ReactionFunctionConfig {\n\tpropertyName: string;\n\treaction: DiffPropertyReaction;\n}\n\nexport interface WidgetAndElementEvent extends EventTypedObject<'properties:changed'> {\n\tkey: string;\n\telement: HTMLElement;\n\ttarget: WidgetBase;\n}\n\nexport type BoundFunctionData = { boundFunc: (...args: any[]) => any, scope: any };\n\nconst decoratorMap = new Map<Function, Map<string, any[]>>();\nconst boundAuto = auto.bind(null);\n\n/**\n * Main widget base for all widgets to extend\n */\nexport class WidgetBase<P = WidgetProperties, C extends DNode = DNode> implements WidgetBaseInterface<P, C> {\n\n\t/**\n\t * static identifier\n\t */\n\tstatic _type: symbol = WIDGET_BASE_TYPE;\n\n\t/**\n\t * children array\n\t */\n\tprivate _children: (C | null)[];\n\n\t/**\n\t * Indicates if it is the initial set properties cycle\n\t */\n\tprivate _initialProperties = true;\n\n\t/**\n\t * internal widget properties\n\t */\n\tprivate _properties: P & WidgetProperties & { [index: string]: any };\n\n\t/**\n\t * Array of property keys considered changed from the previous set properties\n\t */\n\tprivate _changedPropertyKeys: string[] = [];\n\n\tprivate _cachedDNode: DNode | DNode[];\n\n\t/**\n\t * map of decorators that are applied to this widget\n\t */\n\tprivate _decoratorCache: Map<string, any[]>;\n\n\tprivate _registry: RegistryHandler;\n\n\t/**\n\t * Map of functions properties for the bound function\n\t */\n\tprivate _bindFunctionPropertyMap: WeakMap<(...args: any[]) => any, BoundFunctionData>;\n\n\tprivate _renderState: WidgetRenderState = WidgetRenderState.IDLE;\n\n\tprivate _metaMap: Map<WidgetMetaConstructor<any>, WidgetMetaBase>;\n\n\tprivate _boundRenderFunc: Render;\n\n\tprivate _boundInvalidate: () => void;\n\n\tprivate _nodeHandler: NodeHandler = new NodeHandler();\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis._children = [];\n\t\tthis._decoratorCache = new Map<string, any[]>();\n\t\tthis._properties = <P> {};\n\t\tthis._boundRenderFunc = this.render.bind(this);\n\t\tthis._boundInvalidate = this.invalidate.bind(this);\n\n\t\twidgetInstanceMap.set(this, {\n\t\t\tdirty: true,\n\t\t\tonElementCreated: (element: HTMLElement, key: string) => {\n\t\t\t\tthis.onElementCreated(element, key);\n\t\t\t},\n\t\t\tonElementUpdated: (element: HTMLElement, key: string) => {\n\t\t\t\tthis.onElementUpdated(element, key);\n\t\t\t},\n\t\t\tonAttach: (): void => {\n\t\t\t\tthis.onAttach();\n\t\t\t},\n\t\t\tonDetach: (): void => {\n\t\t\t\tthis.onDetach();\n\t\t\t},\n\t\t\tnodeHandler: this._nodeHandler,\n\t\t\tregistry: () => {\n\t\t\t\treturn this.registry;\n\t\t\t},\n\t\t\tcoreProperties: {} as CoreProperties,\n\t\t\tinvalidate: this._boundInvalidate\n\t\t});\n\t}\n\n\tprotected meta<T extends WidgetMetaBase>(MetaType: WidgetMetaConstructor<T>): T {\n\t\tif (this._metaMap === undefined) {\n\t\t\tthis._metaMap = new Map<WidgetMetaConstructor<any>, WidgetMetaBase>();\n\t\t}\n\t\tlet cached = this._metaMap.get(MetaType);\n\t\tif (!cached) {\n\t\t\tcached = new MetaType({\n\t\t\t\tinvalidate: this._boundInvalidate,\n\t\t\t\tnodeHandler: this._nodeHandler,\n\t\t\t\tbind: this\n\t\t\t});\n\t\t\tthis._metaMap.set(MetaType, cached);\n\t\t\tcached;\n\t\t}\n\n\t\treturn cached as T;\n\t}\n\n\t/**\n\t * Widget lifecycle method that is called whenever a dom node is created for a HNode.\n\t * Override this method to access the dom nodes that were inserted into the dom.\n\t * @param element The dom node represented by the vdom node.\n\t * @param key The vdom node's key.\n\t */\n\tprotected onElementCreated(element: Element, key: string): void {\n\t\t// Do nothing by default.\n\t}\n\n\t/**\n\t * Widget lifecycle method that is called whenever a dom node that is associated with a HNode is updated.\n\t * Override this method to access the dom node.\n\t * @param element The dom node represented by the vdom node.\n\t * @param key The vdom node's key.\n\t */\n\tprotected onElementUpdated(element: Element, key: string): void {\n\t\t// Do nothing by default.\n\t}\n\n\tprotected onAttach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tprotected onDetach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tpublic get properties(): Readonly<P> & Readonly<WidgetProperties> {\n\t\treturn this._properties;\n\t}\n\n\tpublic get changedPropertyKeys(): string[] {\n\t\treturn [ ...this._changedPropertyKeys ];\n\t}\n\n\tpublic __setCoreProperties__(coreProperties: CoreProperties): void {\n\t\tthis._renderState = WidgetRenderState.PROPERTIES;\n\t\tconst { baseRegistry } = coreProperties;\n\t\tconst instanceData = widgetInstanceMap.get(this)!;\n\n\t\tif (instanceData.coreProperties.baseRegistry !== baseRegistry) {\n\t\t\tif (this._registry === undefined) {\n\t\t\t\tthis._registry = new RegistryHandler();\n\t\t\t\tthis._registry.on('invalidate', this._boundInvalidate);\n\t\t\t}\n\t\t\tthis._registry.base = baseRegistry;\n\t\t\tthis.invalidate();\n\t\t}\n\t\tinstanceData.coreProperties = coreProperties;\n\t}\n\n\tpublic __setProperties__(originalProperties: this['properties']): void {\n\t\tconst properties = this._runBeforeProperties(originalProperties);\n\t\tconst registeredDiffPropertyNames = this.getDecorator('registeredDiffProperty');\n\t\tconst changedPropertyKeys: string[] = [];\n\t\tconst propertyNames = Object.keys(properties);\n\t\tconst instanceData = widgetInstanceMap.get(this)!;\n\t\tthis._renderState = WidgetRenderState.PROPERTIES;\n\n\t\tif (this._initialProperties === false || registeredDiffPropertyNames.length !== 0) {\n\t\t\tconst allProperties = [ ...propertyNames, ...Object.keys(this._properties) ];\n\t\t\tconst checkedProperties: string[] = [];\n\t\t\tconst diffPropertyResults: any = {};\n\t\t\tlet runReactions = false;\n\n\t\t\tfor (let i = 0; i < allProperties.length; i++) {\n\t\t\t\tconst propertyName = allProperties[i];\n\t\t\t\tif (checkedProperties.indexOf(propertyName) > 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcheckedProperties.push(propertyName);\n\t\t\t\tconst previousProperty = this._properties[propertyName];\n\t\t\t\tconst newProperty = this._bindFunctionProperty(properties[propertyName], instanceData.coreProperties.bind);\n\t\t\t\tif (registeredDiffPropertyNames.indexOf(propertyName) !== -1) {\n\t\t\t\t\trunReactions = true;\n\t\t\t\t\tconst diffFunctions = this.getDecorator(`diffProperty:${propertyName}`);\n\t\t\t\t\tfor (let i = 0; i < diffFunctions.length; i++) {\n\t\t\t\t\t\tconst result = diffFunctions[i](previousProperty, newProperty);\n\t\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst result = boundAuto(previousProperty, newProperty);\n\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t}\n\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (runReactions) {\n\t\t\t\tthis._mapDiffPropertyReactions(properties, changedPropertyKeys).forEach((args, reaction) => {\n\t\t\t\t\tif (args.changed) {\n\t\t\t\t\t\treaction.call(this, args.previousProperties, args.newProperties);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._properties = diffPropertyResults;\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t}\n\t\telse {\n\t\t\tthis._initialProperties = false;\n\t\t\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\t\t\tconst propertyName = propertyNames[i];\n\t\t\t\tif (typeof properties[propertyName] === 'function') {\n\t\t\t\t\tproperties[propertyName] = this._bindFunctionProperty(properties[propertyName], instanceData.coreProperties.bind);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t\tthis._properties = { ...properties };\n\t\t}\n\n\t\tif (this._changedPropertyKeys.length > 0) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tpublic get children(): (C | null)[] {\n\t\treturn this._children;\n\t}\n\n\tpublic __setChildren__(children: (C | null)[]): void {\n\t\tthis._renderState = WidgetRenderState.CHILDREN;\n\t\tif (this._children.length > 0 || children.length > 0) {\n\t\t\tthis._children = children;\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tpublic __render__(): DNode | DNode[] {\n\t\tconst instanceData = widgetInstanceMap.get(this)!;\n\t\tthis._renderState = WidgetRenderState.RENDER;\n\t\tif (instanceData.dirty || this._cachedDNode === undefined) {\n\t\t\tinstanceData.dirty = false;\n\t\t\tconst render = this._runBeforeRenders();\n\t\t\tlet dNode = render();\n\t\t\tthis._cachedDNode = this.runAfterRenders(dNode);\n\t\t\tthis._nodeHandler.clear();\n\t\t}\n\t\tthis._renderState = WidgetRenderState.IDLE;\n\t\treturn this._cachedDNode;\n\t}\n\n\tpublic invalidate(): void {\n\t\tconst instanceData = widgetInstanceMap.get(this)!;\n\t\tif (this._renderState === WidgetRenderState.IDLE) {\n\t\t\tinstanceData.dirty = true;\n\t\t\tif (instanceData.parentInvalidate) {\n\t\t\t\tinstanceData.parentInvalidate();\n\t\t\t}\n\t\t}\n\t\telse if (this._renderState === WidgetRenderState.PROPERTIES) {\n\t\t\tinstanceData.dirty = true;\n\t\t}\n\t\telse if (this._renderState === WidgetRenderState.CHILDREN) {\n\t\t\tinstanceData.dirty = true;\n\t\t}\n\t}\n\n\tprotected render(): DNode | DNode[] {\n\t\treturn v('div', {}, this.children);\n\t}\n\n\t/**\n\t * Function to add decorators to WidgetBase\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @param value The value of the decorator\n\t */\n\tprotected addDecorator(decoratorKey: string, value: any): void {\n\t\tvalue = Array.isArray(value) ? value : [ value ];\n\t\tif (this.hasOwnProperty('constructor')) {\n\t\t\tlet decoratorList = decoratorMap.get(this.constructor);\n\t\t\tif (!decoratorList) {\n\t\t\t\tdecoratorList = new Map<string, any[]>();\n\t\t\t\tdecoratorMap.set(this.constructor, decoratorList);\n\t\t\t}\n\n\t\t\tlet specificDecoratorList = decoratorList.get(decoratorKey);\n\t\t\tif (!specificDecoratorList) {\n\t\t\t\tspecificDecoratorList = [];\n\t\t\t\tdecoratorList.set(decoratorKey, specificDecoratorList);\n\t\t\t}\n\t\t\tspecificDecoratorList.push(...value);\n\t\t}\n\t\telse {\n\t\t\tconst decorators = this.getDecorator(decoratorKey);\n\t\t\tthis._decoratorCache.set(decoratorKey, [ ...decorators, ...value ]);\n\t\t}\n\t}\n\n\t/**\n\t * Function to build the list of decorators from the global decorator map.\n\t *\n\t * @param decoratorKey  The key of the decorator\n\t * @return An array of decorator values\n\t * @private\n\t */\n\tprivate _buildDecoratorList(decoratorKey: string): any[] {\n\t\tconst allDecorators = [];\n\n\t\tlet constructor = this.constructor;\n\n\t\twhile (constructor) {\n\t\t\tconst instanceMap = decoratorMap.get(constructor);\n\t\t\tif (instanceMap) {\n\t\t\t\tconst decorators = instanceMap.get(decoratorKey);\n\n\t\t\t\tif (decorators) {\n\t\t\t\t\tallDecorators.unshift(...decorators);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconstructor = Object.getPrototypeOf(constructor);\n\t\t}\n\n\t\treturn allDecorators;\n\t}\n\n\t/**\n\t * Function to retrieve decorator values\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @returns An array of decorator values\n\t */\n\tprotected getDecorator(decoratorKey: string): any[] {\n\t\tlet allDecorators = this._decoratorCache.get(decoratorKey);\n\n\t\tif (allDecorators !== undefined) {\n\t\t\treturn allDecorators;\n\t\t}\n\n\t\tallDecorators = this._buildDecoratorList(decoratorKey);\n\n\t\tthis._decoratorCache.set(decoratorKey, allDecorators);\n\t\treturn allDecorators;\n\t}\n\n\tprivate _mapDiffPropertyReactions(newProperties: any, changedPropertyKeys: string[]): Map<Function, ReactionFunctionArguments> {\n\t\tconst reactionFunctions: ReactionFunctionConfig[] = this.getDecorator('diffReaction');\n\n\t\treturn reactionFunctions.reduce((reactionPropertyMap, { reaction, propertyName }) => {\n\t\t\tlet reactionArguments = reactionPropertyMap.get(reaction);\n\t\t\tif (reactionArguments === undefined) {\n\t\t\t\treactionArguments = {\n\t\t\t\t\tpreviousProperties: {},\n\t\t\t\t\tnewProperties: {},\n\t\t\t\t\tchanged: false\n\t\t\t\t};\n\t\t\t}\n\t\t\treactionArguments.previousProperties[propertyName] = this._properties[propertyName];\n\t\t\treactionArguments.newProperties[propertyName] = newProperties[propertyName];\n\t\t\tif (changedPropertyKeys.indexOf(propertyName) !== -1) {\n\t\t\t\treactionArguments.changed = true;\n\t\t\t}\n\t\t\treactionPropertyMap.set(reaction, reactionArguments);\n\t\t\treturn reactionPropertyMap;\n\t\t}, new Map<Function, ReactionFunctionArguments>());\n\n\t}\n\n\t/**\n\t * Binds unbound property functions to the specified `bind` property\n\t *\n\t * @param properties properties to check for functions\n\t */\n\tprivate _bindFunctionProperty(property: any, bind: any): any {\n\t\tif (typeof property === 'function' && isWidgetBaseConstructor(property) === false) {\n\t\t\tif (this._bindFunctionPropertyMap === undefined) {\n\t\t\t\tthis._bindFunctionPropertyMap = new WeakMap<(...args: any[]) => any, { boundFunc: (...args: any[]) => any, scope: any }>();\n\t\t\t}\n\t\t\tconst bindInfo: Partial<BoundFunctionData> = this._bindFunctionPropertyMap.get(property) || {};\n\t\t\tlet { boundFunc, scope } = bindInfo;\n\n\t\t\tif (boundFunc === undefined || scope !== bind) {\n\t\t\t\tboundFunc = property.bind(bind) as (...args: any[]) => any;\n\t\t\t\tthis._bindFunctionPropertyMap.set(property, { boundFunc, scope: bind });\n\t\t\t}\n\t\t\treturn boundFunc;\n\t\t}\n\t\treturn property;\n\t}\n\n\tpublic get registry(): RegistryHandler {\n\t\tif (this._registry === undefined) {\n\t\t\tthis._registry = new RegistryHandler();\n\t\t\tthis._registry.on('invalidate', this._boundInvalidate);\n\t\t}\n\t\treturn this._registry;\n\t}\n\n\tprivate _runBeforeProperties(properties: any) {\n\t\tconst beforeProperties: BeforeProperties[] = this.getDecorator('beforeProperties');\n\t\tif (beforeProperties.length > 0) {\n\t\t\treturn beforeProperties.reduce((properties, beforePropertiesFunction) => {\n\t\t\t\treturn { ...properties, ...beforePropertiesFunction.call(this, properties) };\n\t\t\t}, { ...properties });\n\t\t}\n\t\treturn properties;\n\t}\n\n\t/**\n\t * Run all registered before renders and return the updated render method\n\t */\n\tprivate _runBeforeRenders(): Render {\n\t\tconst beforeRenders = this.getDecorator('beforeRender');\n\n\t\tif (beforeRenders.length > 0) {\n\t\t\treturn beforeRenders.reduce((render: Render, beforeRenderFunction: BeforeRender) => {\n\t\t\t\tconst updatedRender = beforeRenderFunction.call(this, render, this._properties, this._children);\n\t\t\t\tif (!updatedRender) {\n\t\t\t\t\tconsole.warn('Render function not returned from beforeRender, using previous render');\n\t\t\t\t\treturn render;\n\t\t\t\t}\n\t\t\t\treturn updatedRender;\n\t\t\t}, this._boundRenderFunc);\n\t\t}\n\t\treturn this._boundRenderFunc;\n\t}\n\n\t/**\n\t * Run all registered after renders and return the decorated DNodes\n\t *\n\t * @param dNode The DNodes to run through the after renders\n\t */\n\tprotected runAfterRenders(dNode: DNode | DNode[]): DNode | DNode[] {\n\t\tconst afterRenders = this.getDecorator('afterRender');\n\n\t\tif (afterRenders.length > 0) {\n\t\t\treturn afterRenders.reduce((dNode: DNode | DNode[], afterRenderFunction: AfterRender) => {\n\t\t\t\treturn afterRenderFunction.call(this, dNode);\n\t\t\t}, dNode);\n\t\t}\n\n\t\tif (this._metaMap !== undefined) {\n\t\t\tthis._metaMap.forEach((meta) => {\n\t\t\t\tmeta.afterRender();\n\t\t\t});\n\t\t}\n\n\t\treturn dNode;\n\t}\n}\n\nexport default WidgetBase;\n"]}