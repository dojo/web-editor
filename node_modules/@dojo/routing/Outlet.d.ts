import { Constructor, RegistryLabel, WidgetBaseInterface, WidgetProperties } from '@dojo/widget-core/interfaces';
import { WidgetBase } from '@dojo/widget-core/WidgetBase';
import { Component, MapParams, OutletComponents } from './interfaces';
export declare function isComponent<W extends WidgetBaseInterface>(value: any): value is Component<W>;
export declare type Outlet<W extends WidgetBaseInterface, F extends WidgetBaseInterface, E extends WidgetBaseInterface> = Constructor<WidgetBase<Partial<E['properties']> & Partial<W['properties']> & Partial<F['properties']> & WidgetProperties, null>>;
export declare function Outlet<W extends WidgetBaseInterface, F extends WidgetBaseInterface, E extends WidgetBaseInterface>(outletComponents: Component<W> | OutletComponents<W, F, E>, outlet: string | string[], mapParams?: MapParams, key?: RegistryLabel): Outlet<W, F, E>;
export default Outlet;
