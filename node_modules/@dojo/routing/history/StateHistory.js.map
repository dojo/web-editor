{"version":3,"file":"StateHistory.js","sourceRoot":"","sources":["StateHistory.ts"],"names":[],"mappings":"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","sourcesContent":["import global from '@dojo/shim/global';\nimport on from '@dojo/core/on';\nimport { HistoryBase } from './HistoryBase';\n\nimport { History, BrowserHistory, HistoryOptions } from './interfaces';\n\n/**\n * Options for creating StateHistory instances.\n */\nexport interface StateHistoryOptions extends HistoryOptions {\n\t/**\n\t * A base pathname. The current value, as well as the emitted change value, will be relative to this base (though\n\t * starting with a slash). If not set the DOM window's location's path will be used in its entirety. If the\n\t * location's path is not a suffix of the base, the value will be a single slash instead.\n\t *\n\t * Must not contain fragment identifiers or search components.\n\t */\n\tbase?: string;\n\n\t/**\n\t * A DOM window object. StateHistory uses the `history` and `location` properties and\n\t * listens to `popstate` events. The current value is initialized to the current path.\n\t */\n\twindow: Window;\n}\n\n/**\n * A browser-based history manager that uses the history object to store the current value.\n *\n * This manager ensures the current value always starts with a slash.\n */\nexport class StateHistory extends HistoryBase implements History {\n\tprivate _base: string;\n\tprivate _current: string;\n\tprivate _browserHistory: BrowserHistory;\n\n\tget current() {\n\t\treturn this._current;\n\t}\n\n\tprefix(path: string) {\n\t\tconst baseEndsWithSlash = /\\/$/.test(this._base);\n\t\tconst pathStartsWithSlash = /^\\//.test(path);\n\t\tif (baseEndsWithSlash && pathStartsWithSlash) {\n\t\t\treturn this._base + path.slice(1);\n\t\t}\n\t\telse if (!baseEndsWithSlash && !pathStartsWithSlash) {\n\t\t\treturn `${this._base}/${path}`;\n\t\t}\n\t\telse {\n\t\t\treturn this._base + path;\n\t\t}\n\t}\n\n\tset(path: string) {\n\t\tconst value = ensureLeadingSlash(path);\n\t\tif (this._current === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._current = value;\n\t\tthis._browserHistory.pushState({}, '', this.prefix(path));\n\t\tthis.emit({ type: 'change', value });\n\t}\n\n\treplace(path: string) {\n\t\tconst value = ensureLeadingSlash(path);\n\t\tif (this._current === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._current = value;\n\t\tthis._browserHistory.replaceState({}, '', this.prefix(path));\n\t\tthis.emit({ type: 'change', value });\n\t}\n\n\tconstructor({ base = '/', window }: StateHistoryOptions = { window: global }) {\n\t\tsuper({});\n\n\t\tif (base !== '/') {\n\t\t\tif (/#/.test(base)) {\n\t\t\t\tthrow new TypeError('base must not contain \\'#\\'');\n\t\t\t}\n\t\t\tif (/\\?/.test(base)) {\n\t\t\t\tthrow new TypeError('base must not contain \\'?\\'');\n\t\t\t}\n\t\t}\n\n\t\tconst { history: browserHistory, location } = window;\n\n\t\tthis._base = base;\n\t\tthis._current = stripBase(base, location.pathname + location.search);\n\t\tthis._browserHistory = browserHistory;\n\n\t\tthis.own(on(window, 'popstate', () => {\n\t\t\tconst path = stripBase(base, location.pathname + location.search);\n\n\t\t\t// Ignore popstate for the current path. Guards against browsers firing\n\t\t\t// popstate on page load, see\n\t\t\t// <https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate>.\n\t\t\tif (path !== this._current) {\n\t\t\t\tthis._current = path;\n\t\t\t\tthis.emit({\n\t\t\t\t\ttype: 'change',\n\t\t\t\t\tvalue: path\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\t}\n}\n\nfunction stripBase(base: string, path: string): string {\n\tif (base === '/') {\n\t\treturn path;\n\t}\n\n\tif (path.indexOf(base) === 0) {\n\t\treturn ensureLeadingSlash(path.slice(base.length));\n\t}\n\telse {\n\t\treturn '/';\n\t}\n}\n\nfunction ensureLeadingSlash(path: string): string {\n\treturn /^\\//.test(path) ? path : `/${path}`;\n}\n\nexport default StateHistory;\n"]}