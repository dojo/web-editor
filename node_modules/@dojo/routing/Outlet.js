(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "tslib", "@dojo/widget-core/WidgetBase", "@dojo/widget-core/d", "@dojo/widget-core/decorators/inject", "./RouterInjector", "./interfaces"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require("tslib");
    var WidgetBase_1 = require("@dojo/widget-core/WidgetBase");
    var d_1 = require("@dojo/widget-core/d");
    var inject_1 = require("@dojo/widget-core/decorators/inject");
    var RouterInjector_1 = require("./RouterInjector");
    var interfaces_1 = require("./interfaces");
    function isComponent(value) {
        return Boolean(value && ((typeof value === 'string') || (typeof value === 'function') || (typeof value === 'symbol')));
    }
    exports.isComponent = isComponent;
    function Outlet(outletComponents, outlet, mapParams, key) {
        if (mapParams === void 0) { mapParams = function (options) { }; }
        if (key === void 0) { key = RouterInjector_1.routerKey; }
        var indexComponent = isComponent(outletComponents) ? undefined : outletComponents.index;
        var mainComponent = isComponent(outletComponents) ? outletComponents : outletComponents.main;
        var errorComponent = isComponent(outletComponents) ? undefined : outletComponents.error;
        function getProperties(router, properties) {
            return { router: router };
        }
        ;
        var OutletComponent = /** @class */ (function (_super) {
            tslib_1.__extends(OutletComponent, _super);
            function OutletComponent() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            OutletComponent.prototype.__setProperties__ = function (properties) {
                _super.prototype.__setProperties__.call(this, properties);
                this.invalidate();
            };
            OutletComponent.prototype.render = function () {
                var router = this.properties.router;
                var outletContext = router.getOutlet(outlet);
                if (outletContext) {
                    var params = outletContext.params, type = outletContext.type, location_1 = outletContext.location;
                    var properties = tslib_1.__assign({}, this.properties, mapParams({ params: params, type: type, location: location_1, router: router }));
                    if ((type === interfaces_1.MatchType.INDEX || type === interfaces_1.MatchType.ERROR) && indexComponent) {
                        return d_1.w(indexComponent, properties, this.children);
                    }
                    else if (type === interfaces_1.MatchType.ERROR && errorComponent) {
                        return d_1.w(errorComponent, properties, this.children);
                    }
                    else if (type !== interfaces_1.MatchType.ERROR && mainComponent) {
                        return d_1.w(mainComponent, properties, this.children);
                    }
                }
                return null;
            };
            OutletComponent = tslib_1.__decorate([
                inject_1.inject({ name: RouterInjector_1.routerKey, getProperties: getProperties })
            ], OutletComponent);
            return OutletComponent;
        }(WidgetBase_1.WidgetBase));
        return OutletComponent;
    }
    exports.Outlet = Outlet;
    exports.default = Outlet;
});
//# sourceMappingURL=Outlet.js.map