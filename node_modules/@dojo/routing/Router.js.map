{"version":3,"file":"Router.js","sourceRoot":"","sources":["Router.ts"],"names":[],"mappings":"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","sourcesContent":["import Task from '@dojo/core/async/Task';\nimport Evented from '@dojo/core/Evented';\nimport { assign } from '@dojo/shim/object';\nimport { pausable, PausableHandle } from '@dojo/core/on';\nimport UrlSearchParams from '@dojo/core/UrlSearchParams';\nimport { includes } from '@dojo/shim/array';\nimport { Thenable } from '@dojo/shim/interfaces';\nimport Map from '@dojo/shim/Map';\nimport Promise from '@dojo/shim/Promise';\nimport { History, HistoryChangeEvent } from './history/interfaces';\nimport {\n\tContext,\n\tDispatchResult,\n\tErrorEvent,\n\tLinkParams,\n\tMatchType,\n\tNavigationStartEvent,\n\tOutletContext,\n\tParameters,\n\tRequest,\n\tRouteConfig,\n\tRouteInterface,\n\tRouterEvents,\n\tRouterInterface,\n\tRouterOptions,\n\tSearchParams,\n\tSelection,\n\tStartOptions\n} from './interfaces';\nimport { isNamedSegment, parse as parsePath } from './lib/path';\nimport { hasBeenAppended, parentMap } from './lib/router';\nimport { Route } from './Route';\n\nexport const errorOutlet = 'errorOutlet';\n\n// istanbul ignore next\nconst noop = () => {\n};\n\nfunction createDeferral() {\n\t// Use noop since TypeScript doesn't know we're assigning cancel and resume in the promise executor.\n\tlet cancel: () => void = noop;\n\tlet resume: () => void = noop;\n\tconst promise = new Promise<void>((resolve, reject) => {\n\t\tcancel = reject;\n\t\t// Wrap resolve to avoid resume being called with a thenable if type checking is not used.\n\t\tresume = () => resolve();\n\t});\n\treturn { cancel, promise, resume };\n}\n\nfunction reportError(router: Router<Context>, context: Context, path: string, error: any) {\n\trouter.emit<ErrorEvent<Context>>({\n\t\tcontext,\n\t\terror,\n\t\tpath,\n\t\ttarget: router,\n\t\ttype: 'error'\n\t});\n}\n\nfunction catchRejection(router: Router<Context>, context: Context, path: string, thenable: void | Thenable<any>) {\n\tif (thenable) {\n\t\tPromise.resolve(thenable).catch((error) => {\n\t\t\treportError(router, context, path, error);\n\t\t});\n\t}\n}\n\nexport class Router<C extends Context> extends Evented implements RouterInterface<C> {\n\tprivate _contextFactory: () => Context;\n\tprivate _currentSelection: Selection[];\n\tprivate _dispatchFromStart: boolean;\n\tprivate _fallback?: (request: Request<Context, Parameters>) => void | Thenable<any>;\n\tprivate _history?: History;\n\tprivate _routes: RouteInterface<Context, Parameters>[];\n\tprivate _started?: boolean;\n\tprivate _outletContextMap: Map<string, OutletContext> = new Map<string, OutletContext>();\n\tprivate _outletRouteMap: Map<string, RouteInterface<any, any>> = new Map<string, RouteInterface<any, any>>();\n\tprivate _currentParams: any = {};\n\tprivate _defaultParams: any = {};\n\tprivate _defaultRoute: RouteInterface<any, any>;\n\n\ton: RouterEvents<C>;\n\n\tconstructor(options: RouterOptions<C> = { }) {\n\t\tsuper({});\n\t\tconst { context, fallback, history, config } = options;\n\n\t\tlet contextFactory: () => C;\n\t\tif (typeof context === 'function') {\n\t\t\tcontextFactory = context;\n\t\t}\n\t\telse if (typeof context === 'undefined') {\n\t\t\tcontextFactory = () => {\n\t\t\t\treturn {} as C;\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Assign to a constant since the context variable may be changed after the function is defined,\n\t\t\t// which would violate its typing.\n\t\t\tconst sharedContext = context;\n\t\t\tcontextFactory = () => sharedContext;\n\t\t}\n\n\t\tif (history) {\n\t\t\tthis.own(history);\n\t\t}\n\n\t\tthis._contextFactory = contextFactory;\n\t\tthis._currentSelection = [];\n\t\tthis._dispatchFromStart = false;\n\t\tthis._fallback = fallback;\n\t\tthis._history = history;\n\t\tthis._routes = [];\n\t\tthis._started = false;\n\n\t\tif (config) {\n\t\t\tthis.register(config);\n\t\t}\n\t}\n\n\tregister(config: RouteConfig[], from: string | RouterInterface<any> | RouteInterface<any, any> = this) {\n\t\tlet parent: RouterInterface<any> | RouteInterface<any, any>;\n\t\tif (typeof from === 'string') {\n\t\t\tparent = this._outletRouteMap.get(from) || this;\n\t\t}\n\t\telse {\n\t\t\tparent = from;\n\t\t}\n\n\t\tconfig.forEach(({ defaultRoute, path, outlet = path, defaultParams = {}, children }) => {\n\t\t\tconst route = new Route({\n\t\t\t\tpath,\n\t\t\t\toutlet,\n\t\t\t\tdefaultParams\n\t\t\t});\n\t\t\tif (defaultRoute) {\n\t\t\t\tif (!this._defaultRoute) {\n\t\t\t\t\tthis._defaultRoute = route;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow new Error(`Default outlet has already been configured. Unable to register outlet ${outlet} as the default.`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tassign(this._defaultParams, defaultParams);\n\t\t\tthis._outletRouteMap.set(outlet, route);\n\t\t\tparent.append(route);\n\t\t\tif (children) {\n\t\t\t\tthis.register(children, route);\n\t\t\t}\n\t\t});\n\t}\n\n\tappend(add: RouteInterface<Context, Parameters> | RouteInterface<Context, Parameters>[]) {\n\t\tconst append = (route: RouteInterface<Context, Parameters>) => {\n\t\t\tif (hasBeenAppended(route)) {\n\t\t\t\tthrow new Error('Cannot append route that has already been appended');\n\t\t\t}\n\n\t\t\tthis._routes.push(route);\n\t\t\tparentMap.set(route, this);\n\t\t};\n\n\t\tif (Array.isArray(add)) {\n\t\t\tfor (const route of add) {\n\t\t\t\tappend(route);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tappend(add);\n\t\t}\n\t}\n\n\tprivate _dispatch(context: Context, path: string, canceled: boolean = false, emit: boolean = true) {\n\t\tif (canceled) {\n\t\t\treturn { success: false };\n\t\t}\n\n\t\tthis._currentParams = {};\n\t\tthis._outletContextMap.clear();\n\n\t\tif (emit) {\n\t\t\tthis.emit<NavigationStartEvent>({\n\t\t\t\tcontext,\n\t\t\t\tpath,\n\t\t\t\ttarget: this,\n\t\t\t\ttype: 'navstart'\n\t\t\t});\n\t\t}\n\n\t\tconst { searchParams, segments, trailingSlash } = parsePath(path);\n\t\tconst dispatchFromStart = this._dispatchFromStart;\n\t\tthis._dispatchFromStart = false;\n\n\t\tlet redirect: undefined | string;\n\t\tconst dispatched = this._routes.some((route) => {\n\t\t\tconst result = route.select(context, segments, trailingSlash, searchParams);\n\n\t\t\tif (typeof result === 'string') {\n\t\t\t\tredirect = result;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (result.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Update the selected routes after selecting new routes, but before invoking the handlers.\n\t\t\t// This means the original value is available to guard() and params() functions, and the\n\t\t\t// new value when the newly selected routes are executed.\n\t\t\t//\n\t\t\t// Reset selected routes if not dispatched from start().\n\t\t\tthis._currentSelection = dispatchFromStart ? result : [];\n\n\t\t\tfor (const { handler, params, outlet, type, route } of result) {\n\t\t\t\tif (outlet) {\n\t\t\t\t\tassign(this._currentParams, params);\n\t\t\t\t\tconst location = this.link(route, this._currentParams);\n\t\t\t\t\tthis._outletContextMap.set(outlet, { type, params, location });\n\t\t\t\t\tif (type === MatchType.ERROR) {\n\t\t\t\t\t\tthis._outletContextMap.set(errorOutlet, { type: MatchType.PARTIAL, params, location });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatchRejection(this, context, path, handler({ context, params }));\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\t// Reset the selected routes if the dispatch was unsuccessful, or if a redirect was requested.\n\t\tif (!dispatched || redirect !== undefined) {\n\t\t\tthis._currentSelection = [];\n\t\t}\n\n\t\tif (!dispatched) {\n\t\t\tthis._outletContextMap.set(errorOutlet, {\n\t\t\t\ttype: MatchType.PARTIAL,\n\t\t\t\tparams: {},\n\t\t\t\tlocation: this._history ? this._history.current : ''\n\t\t\t});\n\t\t\tif (this._fallback) {\n\t\t\t\tcatchRejection(this, context, path, this._fallback({ context, params: {} }));\n\t\t\t\treturn { success: false };\n\t\t\t}\n\t\t}\n\n\t\tconst result: DispatchResult = { success: dispatched };\n\t\tif (redirect !== undefined) {\n\t\t\tresult.redirect = redirect;\n\t\t}\n\t\treturn result;\n\n\t}\n\n\tdispatch(context: Context, path: string): Task<DispatchResult> {\n\t\tlet canceled = false;\n\t\tconst cancel = () => {\n\t\t\tcanceled = true;\n\t\t};\n\n\t\tconst deferrals: Promise<void>[] = [];\n\n\t\tthis._currentParams = {};\n\t\tthis._outletContextMap.clear();\n\t\tthis.emit<NavigationStartEvent>({\n\t\t\tcontext,\n\t\t\tcancel,\n\t\t\tdefer () {\n\t\t\t\tconst { cancel, promise, resume } = createDeferral();\n\t\t\t\tdeferrals.push(promise);\n\t\t\t\treturn { cancel, resume };\n\t\t\t},\n\t\t\tpath,\n\t\t\ttarget: this,\n\t\t\ttype: 'navstart'\n\t\t});\n\n\t\t// Synchronous cancellation.\n\t\tif (canceled) {\n\t\t\treturn Task.resolve({ success: false });\n\t\t}\n\n\t\treturn new Task<DispatchResult>((resolve, reject) => {\n\t\t\t// *Always* start dispatching in a future turn, even if there were no deferrals.\n\t\t\tPromise.all(deferrals).then<DispatchResult, DispatchResult>(\n\t\t\t\t() => {\n\t\t\t\t\treturn this._dispatch(context, path, canceled, false);\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\treturn { success: false };\n\t\t\t\t}\n\t\t\t).then(resolve, (error) => {\n\t\t\t\treportError(this, context, path, error);\n\t\t\t\treject(error);\n\t\t\t});\n\t\t}, cancel);\n\t}\n\n\tlink(routeOrOutlet: RouteInterface<Context, Parameters> | string, params: LinkParams = {}): string {\n\t\tlet route: RouteInterface<Context, Parameters>;\n\t\tif (typeof routeOrOutlet === 'string') {\n\t\t\tconst item = this._outletRouteMap.get(routeOrOutlet);\n\t\t\tif (item) {\n\t\t\t\troute = item;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new Error(`No outlet ${routeOrOutlet} has been registered`);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\troute = routeOrOutlet;\n\t\t}\n\t\tconst hierarchy = [ route ];\n\t\tfor (let parent = route.parent; parent !== undefined; parent = parent.parent) {\n\t\t\thierarchy.unshift(parent);\n\t\t}\n\n\t\tif (!includes(this._routes, hierarchy[ 0 ])) {\n\t\t\tthrow new Error('Cannot generate link for route that is not in the hierarchy');\n\t\t}\n\n\t\tconst { leadingSlash: addLeadingSlash } = hierarchy[ 0 ].path;\n\t\tlet addTrailingSlash = false;\n\t\tconst segments: string[] = [];\n\t\tconst searchParams = new UrlSearchParams();\n\n\t\thierarchy\n\t\t\t.map((route, index) => {\n\t\t\t\tconst { path } = route;\n\t\t\t\tlet currentPathValues: string[] | undefined;\n\t\t\t\tlet currentSearchParams: SearchParams | undefined;\n\n\t\t\t\tconst selection = this._currentSelection[ index ];\n\t\t\t\tif (selection && selection.route === route) {\n\t\t\t\t\tcurrentPathValues = selection.rawPathValues;\n\t\t\t\t\tcurrentSearchParams = selection.rawSearchParams;\n\t\t\t\t}\n\n\t\t\t\treturn { currentPathValues, currentSearchParams, path, route };\n\t\t\t})\n\t\t\t.forEach(({ currentPathValues, currentSearchParams, path, route }) => {\n\t\t\t\tconst { expectedSegments, searchParameters, trailingSlash } = path;\n\t\t\t\taddTrailingSlash = trailingSlash;\n\n\t\t\t\tlet namedOffset = 0;\n\t\t\t\tfor (const segment of expectedSegments) {\n\t\t\t\t\tif (isNamedSegment(segment)) {\n\t\t\t\t\t\tconst value = params[ segment.name ];\n\t\t\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\t\t\tsegments.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (Array.isArray(value)) {\n\t\t\t\t\t\t\tif (value.length === 1) {\n\t\t\t\t\t\t\t\tsegments.push(value[ 0 ]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthrow new TypeError(`Cannot generate link, multiple values for parameter '${segment.name}'`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (currentPathValues) {\n\t\t\t\t\t\t\tsegments.push(currentPathValues[ namedOffset ]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (route.defaultParams[ segment.name ]) {\n\t\t\t\t\t\t\tsegments.push(route.defaultParams[ segment.name ]);\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthrow new Error(`Cannot generate link, missing parameter '${segment.name}'`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnamedOffset++;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsegments.push(segment.literal);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const key of searchParameters) {\n\t\t\t\t\t// Don't repeat the search parameter if a previous route in the hierarchy has already appended\n\t\t\t\t\t// it.\n\t\t\t\t\tif (searchParams.has(key)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst value = params[ key ] || this._defaultParams[ key ] ;\n\t\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\t\tsearchParams.append(key, value);\n\t\t\t\t\t}\n\t\t\t\t\telse if (Array.isArray(value)) {\n\t\t\t\t\t\tfor (const item of value) {\n\t\t\t\t\t\t\tsearchParams.append(key, item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (currentSearchParams) {\n\t\t\t\t\t\tfor (const item of currentSearchParams[ key ]) {\n\t\t\t\t\t\t\tsearchParams.append(key, item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthrow new Error(`Cannot generate link, missing search parameter '${key}'`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet pathname = segments.join('/');\n\t\tif (addLeadingSlash) {\n\t\t\tpathname = '/' + pathname;\n\t\t}\n\t\tif (addTrailingSlash) {\n\t\t\tpathname += '/';\n\t\t}\n\n\t\tif (this._history) {\n\t\t\tpathname = this._history.prefix(pathname);\n\t\t}\n\n\t\tconst search = searchParams.toString();\n\t\tconst path = search ? `${pathname}?${search}` : pathname;\n\n\t\treturn path;\n\t}\n\n\treplacePath(path: string) {\n\t\tif (!this._history) {\n\t\t\tthrow new Error('Cannot replace path, router was created without a history manager');\n\t\t}\n\n\t\tthis._history.replace(path);\n\t}\n\n\tsetPath(path: string) {\n\t\tif (!this._history) {\n\t\t\tthrow new Error('Cannot set path, router was created without a history manager');\n\t\t}\n\n\t\tthis._history.set(path);\n\t}\n\n\thasOutlet(outletId: string): boolean {\n\t\treturn this._outletContextMap.has(outletId);\n\t}\n\n\tgetOutlet(outletId: string | string[]): OutletContext | undefined {\n\t\tconst outletIds = Array.isArray(outletId) ? outletId : [ outletId ];\n\t\tlet matchingOutlet: OutletContext | undefined = undefined;\n\t\tlet matchingParams: Parameters = {};\n\t\tlet matchingLocation = '';\n\n\t\tfor (let i = 0; i < outletIds.length; i++) {\n\t\t\tconst outletContext = this._outletContextMap.get(outletIds[i]);\n\n\t\t\tif (outletContext) {\n\t\t\t\tconst { params, location } = outletContext;\n\t\t\t\tmatchingParams = { ...matchingParams, ...params };\n\n\t\t\t\tif (!matchingOutlet || matchingLocation.indexOf(location) === -1) {\n\t\t\t\t\tmatchingLocation = location;\n\t\t\t\t\tmatchingOutlet = {\n\t\t\t\t\t\t...outletContext,\n\t\t\t\t\t\tparams: matchingParams\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn matchingOutlet;\n\t}\n\n\tgetCurrentParams(): Parameters {\n\t\treturn this._currentParams;\n\t}\n\n\tstart(startOptions: StartOptions = { dispatchCurrent : true }): PausableHandle {\n\t\tconst { dispatchCurrent } = startOptions;\n\n\t\tif (this._started) {\n\t\t\tthrow new Error('start can only be called once');\n\t\t}\n\n\t\tthis._started = true;\n\n\t\tif (!this._history) {\n\t\t\treturn {\n\t\t\t\tpause() {\n\t\t\t\t},\n\t\t\t\tresume() {\n\t\t\t\t},\n\t\t\t\tdestroy() {\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tlet lastDispatch: Task<DispatchResult>;\n\t\tlet redirectCount = 0;\n\t\tlet redirecting = false;\n\n\t\tconst dispatch = (path: string) => {\n\t\t\tif (lastDispatch) {\n\t\t\t\tlastDispatch.cancel();\n\t\t\t}\n\n\t\t\t// Reset redirect count if the dispatch was triggered by a non-redirect history change. This allows\n\t\t\t// a route's exec / fallback / index handler to change the history, setting off a new flurry of\n\t\t\t// redirects, without being encumbered by the number of redirects that led to that route being selected.\n\t\t\tif (!redirecting) {\n\t\t\t\tredirectCount = 0;\n\t\t\t}\n\n\t\t\t// Signal to dispatch() that it was called from here.\n\t\t\tthis._dispatchFromStart = true;\n\n\t\t\tconst context = this._contextFactory();\n\t\t\tlastDispatch = this.dispatch(context, path).then((dispatchResult) => {\n\t\t\t\tconst { success, redirect = undefined } = dispatchResult || { success: false };\n\t\t\t\tif (success && redirect !== undefined) {\n\t\t\t\t\tredirectCount++;\n\t\t\t\t\tif (redirectCount > 20) {\n\t\t\t\t\t\tconst error = new Error('More than 20 redirects, giving up');\n\t\t\t\t\t\treportError(this, context, path, error);\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\n\t\t\t\t\tredirecting = true;\n\t\t\t\t\t// The history manager MUST emit the change event synchronously.\n\t\t\t\t\tthis._history!.replace(redirect);\n\t\t\t\t\tredirecting = false;\n\t\t\t\t}\n\t\t\t\treturn dispatchResult;\n\t\t\t});\n\t\t\treturn lastDispatch;\n\t\t};\n\n\t\tconst listener = pausable(this._history, 'change', (event: HistoryChangeEvent) => {\n\t\t\tdispatch(event.value);\n\t\t});\n\t\tthis.own(listener);\n\n\t\tif (dispatchCurrent) {\n\t\t\tconst context = this._contextFactory();\n\t\t\tconst { success, redirect = undefined } = this._dispatch(context, this._history.current);\n\t\t\tif (success && redirect) {\n\t\t\t\tredirecting = true;\n\t\t\t\tthis._history!.replace(redirect);\n\t\t\t\tredirecting = false;\n\t\t\t}\n\t\t\telse if (!success && this._defaultRoute) {\n\t\t\t\tconst normalizedPath = this._history.normalizePath(this.link(this._defaultRoute));\n\t\t\t\tthis._dispatch(context, normalizedPath);\n\t\t\t}\n\t\t}\n\n\t\treturn listener;\n\t}\n}\n\nexport default Router;\n"]}