{"version":3,"file":"LiveCodeController.js","sourceRoot":"","sources":["../src/LiveCodeController.ts"],"names":[],"mappings":"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","sourcesContent":["import { ProjectFileType } from '@dojo/cli-export-project/interfaces/project.json';\nimport Map from '@dojo/shim/Map';\nimport { assign } from '@dojo/shim/object';\nimport { isWNode } from '@dojo/widget-core/d';\nimport { DNode, HNode, WidgetProperties, WNode } from '@dojo/widget-core/interfaces';\nimport WidgetBase from '@dojo/widget-core/WidgetBase';\nimport LiveCodeExample from './LiveCodeExample';\nimport { Program, Project } from './project';\n\nexport interface LiveCodeControllerProperties extends WidgetProperties {\n\tproject: Project;\n\trunnerSrc?: string;\n}\n\nconst CHANGE_INTERVAL = 2000;\n\nfunction isLiveCodeExampleWNode(value: any): value is WNode<LiveCodeExample> {\n\treturn isWNode(value) && value.widgetConstructor === LiveCodeExample;\n}\n\ninterface EditorData {\n\tdirty: boolean;\n\tmodel?: monaco.editor.IModel;\n}\n\nconst editorMap = new Map<string, EditorData>();\n\nexport class LiveCodeController extends WidgetBase<LiveCodeControllerProperties> {\n\tprivate _program: Program | undefined;\n\n\tprivate _onDirty = async (id: string) => {\n\t\tconst { project } = this.properties;\n\t\tconst data = editorMap.get(id);\n\t\tif (data) {\n\t\t\tdata.dirty = true;\n\t\t}\n\t\tthis._program = await project.getProgram();\n\t\tthis.invalidate();\n\t}\n\n\tprivate async _setModel(data: EditorData, id: string, text: string, tsx?: boolean) {\n\t\tconst { project } = this.properties;\n\t\tconst name = `./src/${id}.ts${tsx ? 'x' : ''}`;\n\t\tif (!project.includes(name)) {\n\t\t\tawait project.addFile({\n\t\t\t\ttype: ProjectFileType.TypeScript,\n\t\t\t\tname,\n\t\t\t\ttext\n\t\t\t});\n\t\t}\n\t\tdata.model = project.getFileModel(name);\n\t\tthis._program = await project.getProgram();\n\t\tthis.invalidate();\n\t}\n\n\tprotected render(): DNode[] {\n\t\tconst { _program, children, properties: { runnerSrc } } = this;\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst child = children[i];\n\t\t\tif (isLiveCodeExampleWNode(child)) {\n\t\t\t\tconst { id, tsx } = child.properties;\n\t\t\t\tif (!editorMap.has(id)) {\n\t\t\t\t\teditorMap.set(id, { dirty: true });\n\t\t\t\t}\n\t\t\t\tconst data = editorMap.get(id)!;\n\t\t\t\tconst { model } = data;\n\t\t\t\tif (!model) {\n\t\t\t\t\tconst text = child.children\n\t\t\t\t\t\t.filter((child) => child !== null)\n\t\t\t\t\t\t.map((child) => typeof child === 'object' ? (child as HNode).text : child)\n\t\t\t\t\t\t.join('\\n');\n\t\t\t\t\tif (text) {\n\t\t\t\t\t\tthis._setModel(data, id, text, tsx);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet program: Program | undefined;\n\t\t\t\tif (model && _program && data.dirty) {\n\t\t\t\t\tdata.dirty = false;\n\t\t\t\t\tprogram = _program;\n\t\t\t\t}\n\t\t\t\tassign(child.properties, {\n\t\t\t\t\tchangeInterval: CHANGE_INTERVAL,\n\t\t\t\t\tmodel,\n\t\t\t\t\tprogram,\n\t\t\t\t\trunnerSrc,\n\t\t\t\t\tonDirty: this._onDirty\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn children;\n\t}\n}\n\nexport default LiveCodeController;\n"]}