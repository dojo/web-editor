{"version":3,"file":"Toolbar.js","sourceRoot":"","sources":["../../src/widgets/Toolbar.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA,yCAA2C;IAE3C,0DAAuF;IACvF,2DAAsD;IACtD,yCAAyD;IACzD,qCAAyC;IAEzC,oDAAsD;IAEtD,IAAM,UAAU,GAAG,oBAAW,CAAC,oBAAU,CAAC,CAAC;IAkC3C;;;OAGG;IAEH;QAAqC,2BAAyC;QAD9E;YAAA,qEA4DC;YA1DQ,mBAAa,GAAG;gBACf,IAAA,8CAAa,CAAqB;gBAC1C,aAAa,IAAI,aAAa,EAAE,CAAC;YAClC,CAAC,CAAA;YAEO,iBAAW,GAAG;gBACb,IAAA,wCAAU,CAAqB;gBACvC,UAAU,IAAI,UAAU,EAAE,CAAC;YAC5B,CAAC,CAAA;YAEO,oBAAc,GAAG;gBAChB,IAAA,gDAAc,CAAqB;gBAC3C,cAAc,IAAI,cAAc,EAAE,CAAC;YACpC,CAAC,CAAA;;QA6CF,CAAC;QA3CA,wBAAM,GAAN;YACO,IAAA,oBAA4D,EAA1D,wBAAS,EAAE,sBAAQ,EAAE,0BAAU,EAAE,gBAAK,CAAqB;YACnE,MAAM,CAAC,KAAC,CAAC,KAAK,EAAE;gBACf,OAAO,EAAE,CAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,SAAS,CAAE;gBAC9D,GAAG,EAAE,MAAM;aACX,EAAE;gBACF,KAAC,CAAC,mBAAS,EAAE;oBACZ,GAAG,EAAE,aAAa;oBAClB,KAAK,EAAE,cAAc;oBACrB,KAAK,OAAA;iBACL,EAAE;oBACF,KAAC,CAAC,2BAAe,EAAE;wBAClB,KAAK,EAAE,cAAc;wBACrB,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,eAAe;wBAC5E,KAAK,OAAA;wBACL,OAAO,EAAE,IAAI,CAAC,aAAa;qBAC3B,CAAC;iBACF,CAAC;gBACF,KAAC,CAAC,iBAAO,EAAE;oBACV,KAAK,OAAA;iBACL,EAAE,IAAI,CAAC,QAAQ,CAAC;gBACjB,KAAC,CAAC,mBAAS,EAAE;oBACZ,GAAG,EAAE,eAAe;oBACpB,KAAK,EAAE,gBAAgB;oBACvB,KAAK,OAAA;iBACL,EAAE;oBACF,KAAC,CAAC,2BAAe,EAAE;wBAClB,GAAG,EAAE,YAAY;wBACjB,KAAK,EAAE,aAAa;wBACpB,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,UAAU,CAAC,eAAe;wBAC5E,KAAK,OAAA;wBACL,OAAO,EAAE,IAAI,CAAC,WAAW;qBACzB,CAAC;oBACF,KAAC,CAAC,2BAAe,EAAE;wBAClB,GAAG,EAAE,cAAc;wBACnB,KAAK,EAAE,eAAe;wBACtB,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,UAAU,CAAC,iBAAiB;wBACjF,KAAK,OAAA;wBACL,OAAO,EAAE,IAAI,CAAC,cAAc;qBAC5B,CAAC;iBACF,CAAC;aACF,CAAC,CAAC;QACJ,CAAC;QA1DmB,OAAO;YAD3B,cAAK,CAAC,UAAU,CAAC;WACG,OAAO,CA2D3B;QAAD,cAAC;KAAA,AA3DD,CAAqC,UAAU,GA2D9C;sBA3DoB,OAAO","sourcesContent":["import { v, w } from '@dojo/widget-core/d';\nimport { WNode } from '@dojo/widget-core/interfaces';\nimport { ThemedMixin, ThemedProperties, theme } from '@dojo/widget-core/mixins/Themed';\nimport WidgetBase from '@dojo/widget-core/WidgetBase';\nimport ActionBar, { ActionBarButton } from './ActionBar';\nimport Tablist, { Tab } from './Tablist';\n\nimport * as toolbarCss from '../styles/toolbar.m.css';\n\nconst ThemedBase = ThemedMixin(WidgetBase);\n\nexport interface ToolbarProperties extends ThemedProperties {\n\t/**\n\t * Determines if the files action button is displaying in an open or closed state\n\t */\n\tfilesOpen?: boolean;\n\n\t/**\n\t * Determines if the run action button is displaying in a runnable state or not\n\t */\n\trunnable?: boolean;\n\n\t/**\n\t * Determines if the runner action button is displaying in an open or closed state\n\t */\n\trunnerOpen?: boolean;\n\n\t/**\n\t * Called when the Run action button is clicked\n\t */\n\tonRunClick?(): void;\n\n\t/**\n\t * Called when the Files action button is clicked\n\t */\n\tonToggleFiles?(): void;\n\n\t/**\n\t * Called when the Runner action button is clicked\n\t */\n\tonToggleRunner?(): void;\n}\n\n/**\n * A widget which provides a tab list of tabs based on open files and three actions buttons to control the workbench UI\n * What tabs are displayed are the widget's children.\n */\n@theme(toolbarCss)\nexport default class Toolbar extends ThemedBase<ToolbarProperties, WNode<Tab>> {\n\tprivate _onFilesClick = () => {\n\t\tconst { onToggleFiles } = this.properties;\n\t\tonToggleFiles && onToggleFiles();\n\t}\n\n\tprivate _onRunClick = () => {\n\t\tconst { onRunClick } = this.properties;\n\t\tonRunClick && onRunClick();\n\t}\n\n\tprivate _onRunnerClick = () => {\n\t\tconst { onToggleRunner } = this.properties;\n\t\tonToggleRunner && onToggleRunner();\n\t}\n\n\trender() {\n\t\tconst { filesOpen, runnable, runnerOpen, theme } = this.properties;\n\t\treturn v('div', {\n\t\t\tclasses: [ this.theme(toolbarCss.root), toolbarCss.rootFixed ],\n\t\t\tkey: 'root'\n\t\t}, [\n\t\t\tw(ActionBar, {\n\t\t\t\tkey: 'fileActions',\n\t\t\t\tlabel: 'File actions',\n\t\t\t\ttheme\n\t\t\t}, [\n\t\t\t\tw(ActionBarButton, {\n\t\t\t\t\tlabel: 'Toggle files',\n\t\t\t\t\ticonClass: filesOpen ? toolbarCss.filesIconOpen : toolbarCss.filesIconClosed,\n\t\t\t\t\ttheme,\n\t\t\t\t\tonClick: this._onFilesClick\n\t\t\t\t})\n\t\t\t]),\n\t\t\tw(Tablist, {\n\t\t\t\ttheme\n\t\t\t}, this.children),\n\t\t\tw(ActionBar, {\n\t\t\t\tkey: 'runnerActions',\n\t\t\t\tlabel: 'Runner actions',\n\t\t\t\ttheme\n\t\t\t}, [\n\t\t\t\tw(ActionBarButton, {\n\t\t\t\t\tkey: 'runProject',\n\t\t\t\t\tlabel: 'Run project',\n\t\t\t\t\ticonClass: runnable ? toolbarCss.runIconEnabled : toolbarCss.runIconDisabled,\n\t\t\t\t\ttheme,\n\t\t\t\t\tonClick: this._onRunClick\n\t\t\t\t}),\n\t\t\t\tw(ActionBarButton, {\n\t\t\t\t\tkey: 'toggleRunner',\n\t\t\t\t\tlabel: 'Toggle runner',\n\t\t\t\t\ticonClass: runnerOpen ? toolbarCss.previewIconOpen : toolbarCss.previewIconClosed,\n\t\t\t\t\ttheme,\n\t\t\t\t\tonClick: this._onRunnerClick\n\t\t\t\t})\n\t\t\t])\n\t\t]);\n\t}\n}\n"]}