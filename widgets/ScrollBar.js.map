{"version":3,"file":"ScrollBar.js","sourceRoot":"","sources":["../../src/widgets/ScrollBar.ts"],"names":[],"mappings":"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","sourcesContent":["import { v } from '@dojo/widget-core/d';\nimport Dimensions from '@dojo/widget-core/meta/Dimensions';\nimport Drag from '@dojo/widget-core/meta/Drag';\nimport Matches from '@dojo/widget-core/meta/Matches';\nimport WidgetBase from '@dojo/widget-core/WidgetBase';\nimport { theme, ThemedMixin, ThemedProperties } from '@dojo/widget-core/mixins/Themed';\n\nimport * as scrollbarCss from '../styles/scrollbar.m.css';\n\n/**\n * Properties that can be set `ScrollBar`\n */\nexport interface ScrollBarProperties extends ThemedProperties {\n\t/**\n\t * Is the scroll bar horizontal?  Defaults to `false`.\n\t */\n\thorizontal?: boolean;\n\n\t/**\n\t * The relative position of the top of slider to the scroll area\n\t */\n\tposition: number;\n\n\t/**\n\t * The relative size of the scroll area\n\t */\n\tsize?: number;\n\n\t/**\n\t * The minimum number of pixels of the slider\n\t */\n\tsliderMin?: number;\n\n\t/**\n\t * The relative size of the slider\n\t */\n\tsliderSize?: number;\n\n\t/**\n\t * Is the slider visible?\n\t */\n\tvisible?: boolean;\n\n\t/**\n\t * Called when the widget wants to scroll\n\t * @param delta The relative size of the requested scroll, negative values are a scroll up and positive values are\n\t *              a scroll down.\n\t */\n\tonScroll(delta: number): void;\n}\n\nconst DEFAULT_KEY = 'root';\n\nconst ThemedBase = ThemedMixin(WidgetBase);\n\n/**\n * Convert a relative number to an absolute number\n * @param relative The relative value to convert to an absolute value\n * @param relativeSize The relative size to compare with the abosolute size\n * @param absoluteSize The absolute size to compare with the relative size\n */\nfunction fromRelative(relative: number, relativeSize: number, absoluteSize: number): number {\n\treturn absoluteSize * (relativeSize ? relative / relativeSize : 0);\n}\n\n/**\n * Convert an absolute number to a relative number\n * @param absolute The absolute value to convert to a relative value\n * @param relativeSize The realtive size to compare with the absolute size\n * @param absoluteSize The absolute size to compare with the relative size\n */\nfunction toRelative(absolute: number, relativeSize: number, absoluteSize: number): number {\n\treturn absoluteSize ? (absolute / absoluteSize) * relativeSize : 0;\n}\n\n/**\n * A class that provides a visualization of scrolling as well as emits events when the user interacts with\n * the scroll bar.  The properties of the scroll widget are relative, thereby not needing to translate from\n * the real DOM size of the scroll bar or scroll area it represents.\n */\n@theme(scrollbarCss)\nexport default class ScrollBar extends ThemedBase<ScrollBarProperties> {\n\tprivate _visible = false;\n\n\t/**\n\t * Returns the height or width of the scroll bar, depending on if it is horizontal or not\n\t */\n\tprivate _getDomSize(): number {\n\t\tconst { horizontal, key = DEFAULT_KEY } = this.properties;\n\t\tconst { height, width } = this.meta(Dimensions).get(`${key}`).size;\n\t\treturn horizontal ? width : height;\n\t}\n\n\t/**\n\t * Determine if the scroll bar node is being clicked and if so, call the scroll listener with the relative position\n\t * that is attempted to be navigated to.\n\t * @param event The mouse event\n\t */\n\tprivate _onclick(event: MouseEvent) {\n\t\tconst { key = DEFAULT_KEY } = this.properties;\n\t\tif (this.meta(Matches).get(`${key}`, event)) {\n\t\t\tevent.preventDefault();\n\t\t\tconst domSize = this._getDomSize();\n\t\t\tconst {\n\t\t\t\thorizontal,\n\t\t\t\tposition,\n\t\t\t\tsize = domSize,\n\t\t\t\tsliderMin = 10,\n\t\t\t\tsliderSize,\n\t\t\t\tonScroll\n\t\t\t} = this.properties;\n\t\t\tconst absoluteDelta = (horizontal ? event.offsetX : event.offsetY) -\n\t\t\t\t(fromRelative(position, size, domSize) +\n\t\t\t\t((sliderSize ? fromRelative(sliderSize, size, domSize) : sliderMin) / 2));\n\t\t\tonScroll(toRelative(absoluteDelta, size, domSize));\n\t\t}\n\t}\n\n\t/**\n\t * Set the visible state to true if the mouse is hovering over the scroll bar\n\t * @param event The pointer event\n\t */\n\tprivate _onpointerenter(event: PointerEvent) {\n\t\tevent.preventDefault();\n\t\tif (!this._visible) {\n\t\t\tthis._visible = true;\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\t/**\n\t * Set the visible state to false if the mouse has moved away from the scroll bar\n\t * @param event The pointer event\n\t */\n\tprivate _onpointerleave(event: PointerEvent) {\n\t\tevent.preventDefault();\n\t\tif (this._visible) {\n\t\t\tthis._visible = false;\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst domSize = this._getDomSize();\n\t\tconst {\n\t\t\tproperties: {\n\t\t\t\thorizontal = false,\n\t\t\t\tkey = DEFAULT_KEY,\n\t\t\t\tposition,\n\t\t\t\tsize = domSize,\n\t\t\t\tsliderMin = 10,\n\t\t\t\tsliderSize = 0,\n\t\t\t\tvisible: propsVisible,\n\t\t\t\tonScroll\n\t\t\t}\n\t\t} = this;\n\n\t\tlet dragging = false;\n\t\tconst dragResult = this.meta(Drag).get('slider');\n\t\tconst delta = horizontal ? dragResult.delta.x : dragResult.delta.y;\n\t\tdragging = dragResult.isDragging;\n\t\tdelta && onScroll(toRelative(delta, size, domSize));\n\n\t\tconst renderPosition = `${fromRelative(position, size, domSize)}px`;\n\t\tconst absoluteSliderSize = fromRelative(sliderSize, size, domSize);\n\t\tconst renderSliderSize = `${absoluteSliderSize > sliderMin ? absoluteSliderSize : sliderMin}px`;\n\t\tconst visible = sliderSize >= size ? false : propsVisible !== undefined ? propsVisible : this._visible;\n\t\tconst styles = {\n\t\t\t[ horizontal ? 'left' : 'top' ]: renderPosition,\n\t\t\t[ horizontal ? 'width' : 'height' ]: renderSliderSize\n\t\t};\n\n\t\treturn v('div', {\n\t\t\tclasses: [\n\t\t\t\t...this.theme([\n\t\t\t\t\tscrollbarCss.root,\n\t\t\t\t\thorizontal ? scrollbarCss.horizontal : scrollbarCss.vertical,\n\t\t\t\t\tvisible || dragging ? scrollbarCss.visible : scrollbarCss.invisible\n\t\t\t\t]),\n\t\t\t\tscrollbarCss.rootFixed,\n\t\t\t\thorizontal ? scrollbarCss.horizontalFixed : scrollbarCss.verticalFixed,\n\t\t\t\tvisible || dragging ? scrollbarCss.visibleFixed : scrollbarCss.invisibleFixed\n\t\t\t],\n\t\t\tkey,\n\n\t\t\tonclick: this._onclick,\n\t\t\tonpointerenter: this._onpointerenter,\n\t\t\tonpointerleave: this._onpointerleave\n\t\t}, [\n\t\t\tv('div', {\n\t\t\t\tclasses: [\n\t\t\t\t\t...this.theme([ scrollbarCss.slider, dragging ? scrollbarCss.dragging : null ]),\n\t\t\t\t\tscrollbarCss.sliderFixed\n\t\t\t\t],\n\t\t\t\tkey: 'slider',\n\t\t\t\tstyles\n\t\t\t})\n\t\t]);\n\t}\n}\n"]}