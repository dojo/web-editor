{"version":3,"file":"LiveEditor.js","sourceRoot":"","sources":["../../src/widgets/LiveEditor.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA,iCAA+B,CAAC,+BAA+B;IAE/D,4CAA2C;IAC3C,yCAA2C;IAC3C,2DAAsD;IACtD,0DAAuF;IACvF,mCAA8B;IAC9B,mCAAoD;IAEpD,0DAA4D;IAkB5D,IAAM,UAAU,GAAG,oBAAW,CAAC,oBAAU,CAAC,CAAC;IAG3C;QAAwC,8BAAsC;QAA9E;;QAgCA,CAAC;QA/BU,2BAAM,GAAhB;YACO,IAAA,oBAAwF,EAAtF,sBAAqB,EAArB,0CAAqB,EAAE,UAAE,EAAE,gBAAK,EAAE,oBAAO,EAAE,kBAAc,EAAE,oBAAO,CAAqB;YAC/F,IAAM,gBAAgB,GAAqB,eAAM,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAO,EAAI,EAAE,GAAG,KAAA,EAAE,CAAC,CAAC;YAC1G,MAAM,CAAC,KAAC,CAAC,KAAK,EAAE;gBACf,OAAO,EAAE,CAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,aAAa,CAAC,SAAS,CAAE;aACpE,EAAE;gBACF,KAAC,CAAC,KAAK,EAAE;oBACR,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC;oBACvC,GAAG,EAAE,MAAM;iBACX,EAAE;oBACF,KAAC,CAAC,KAAK,EAAE,EAAE,EAAE,CAAE,aAAa,CAAE,CAAC;oBAC/B,KAAC,CAAC,gBAAM,EAAE;wBACT,cAAc,gBAAA;wBACd,GAAG,EAAE,QAAQ;wBACb,KAAK,OAAA;wBACL,OAAO,EAAE;4BACR,WAAW,EAAE,KAAK;4BAClB,OAAO,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;yBAC3B;wBACD,OAAO,SAAA;qBACP,CAAC;iBACF,CAAC;gBACF,KAAC,CAAC,KAAK,EAAE;oBACR,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC;oBACxC,GAAG,EAAE,OAAO;iBACZ,EAAE;oBACF,KAAC,CAAC,KAAK,EAAE,EAAE,EAAE,CAAE,QAAQ,CAAE,CAAC;oBAC1B,KAAC,CAAC,gBAAM,EAAE,gBAAgB,CAAC;iBAC3B,CAAC;aACF,CAAC,CAAC;QACJ,CAAC;QA/BmB,UAAU;YAD9B,cAAK,CAAC,aAAa,CAAC;WACA,UAAU,CAgC9B;QAAD,iBAAC;KAAA,AAhCD,CAAwC,UAAU,GAgCjD;sBAhCoB,UAAU","sourcesContent":["import 'vs/editor/editor.main'; /* imported for side-effects */\n\nimport { assign } from '@dojo/shim/object';\nimport { v, w } from '@dojo/widget-core/d';\nimport WidgetBase from '@dojo/widget-core/WidgetBase';\nimport { ThemedMixin, ThemedProperties, theme } from '@dojo/widget-core/mixins/Themed';\nimport Editor from './Editor';\nimport Runner, { RunnerProperties } from './Runner';\nimport { Program } from '../project';\nimport * as liveeditorCss from '../styles/liveeditor.m.css';\n\nexport interface LiveEditorProperties extends ThemedProperties {\n\t/**\n\t * The interval, in milliseconds, when the last change to the editor causes it to call `onDirty`.  It will default to\n\t * `1000` (1 second)\n\t */\n\tchangeInterval?: number;\n\n\tid: string;\n\tmodel?: Editor['properties']['model'];\n\tprogram?: Program;\n\n\trunnerSrc?: string;\n\n\tonDirty?(): void;\n}\n\nconst ThemedBase = ThemedMixin(WidgetBase);\n\n@theme(liveeditorCss)\nexport default class LiveEditor extends ThemedBase<LiveEditorProperties, null> {\n\tprotected render() {\n\t\tconst { changeInterval = 1000, id, model, program, runnerSrc: src, onDirty } = this.properties;\n\t\tconst runnerProperties: RunnerProperties = assign({}, program, { key: 'runner', main: `src/${id}`, src });\n\t\treturn v('div', {\n\t\t\tclasses: [ this.theme(liveeditorCss.root), liveeditorCss.rootFixed ]\n\t\t}, [\n\t\t\tv('div', {\n\t\t\t\tclasses: this.theme(liveeditorCss.left),\n\t\t\t\tkey: 'left'\n\t\t\t}, [\n\t\t\t\tv('div', {}, [ 'Live Editor' ]),\n\t\t\t\tw(Editor, {\n\t\t\t\t\tchangeInterval,\n\t\t\t\t\tkey: 'editor',\n\t\t\t\t\tmodel,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tlineNumbers: 'off',\n\t\t\t\t\t\tminimap: { enabled: false }\n\t\t\t\t\t},\n\t\t\t\t\tonDirty\n\t\t\t\t})\n\t\t\t]),\n\t\t\tv('div', {\n\t\t\t\tclasses: this.theme(liveeditorCss.right),\n\t\t\t\tkey: 'right'\n\t\t\t}, [\n\t\t\t\tv('div', {}, [ 'Result' ]),\n\t\t\t\tw(Runner, runnerProperties)\n\t\t\t])\n\t\t]);\n\t}\n}\n"]}